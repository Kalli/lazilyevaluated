{"version":3,"sources":["steps.md","BarChart.js","charts/Chart.js","lib.js","charts/BeeSwarmChart.js","charts/CandleStickChart.js","textHandling.js","charts/ClusterChart.js","ScrollyTelling.js","charts/ChartWrapper.js","Container.js","Rotate.js","Sections.js","navbar.js","App.js","index.js"],"names":["module","exports","BarChart","props","createGraph","data","w","h","color","margin","width","height","svg","select","ref","current","attr","x","scaleBand","domain","range","length","padding","y","scaleLinear","max","map","e","append","selectAll","join","d","i","bandwidth","call","g","axisBottom","tickFormat","tickSizeOuter","style","axisLeft","ticks","remove","text","React","createRef","this","Component","Chart","categories","initial","left","right","top","bottom","legend","active","t","transition","duration","nodes","node","selectedNodes","includes","fillColor","category","interpolateWarm","indexOf","factorial","n","BeeSwarmChart","group","number_of_unique_artists","total_number_of_artists","drawGraph","clickHandler","filterNodes","calculateInitialPositions","id","exit","newNode","enter","radius","toFixed","merge","highlightSelected","stepBand","Math","floor","yScale","step","forEach","offset","random","xScale","filter","number_of_dates","groups","Set","createLegend","yOffset","translate","axis","tickValues","concat","labelOffset","CandleStickChart","candleStickData","reduce","acc","key","groupBy","push","Object","keys","sort","a","b","ceil","min","count","exitPrevChart","on","click","tooltip","tooltipData","html","detail","event","pageX","pageY","Array","from","bw","each","agg","mean","region","drawBox","percentile_5","percentile_95","drawWhiskers","drawMean","addLabel","start","rows","club","CHAR_W","A","B","C","c","D","E","F","f","G","H","I","J","j","K","k","L","l","M","m","N","O","o","P","p","Q","q","R","r","S","s","T","U","u","V","v","W","X","Y","Z","z","fitTextToScreen","fittedText","split","ClusterChart","decay","timer","elapsed","dt","simulation","force","strength","pow","stop","cluster","zoom","zoomGroup","transform","drag","dragstarted","dragged","dragended","calculateRadius","alphaTarget","restart","setTimeout","tick","groupCount","clusters","angle","PI","cos","sin","alpha","sqrt","initialize","_","fx","fy","forceSimulation","forceCenter","forceX","forceY","forceCollide","zoomHandler","scaleExtent","type","target","nodeName","sizes","radiuses","followers","log","ScrollyTelling","stepsData","draw","filters","scroll","chartType","country","state","steps","links","weight","source","club_id","clubCount","averageWeight","combinations","averageResidency","fetch","then","response","marked","replace","setState","stepHtml","className","dangerouslySetInnerHTML","__html","onStepEnter","debug","ChartWrapper","ChartType","chart","newChart","Container","controlHeight","onNodeClick","index","splice","slice","setFilters","name","value","parseInt","updateWindowDimensions","document","documentElement","clientWidth","clientHeight","svgWidth","svgHeight","element","direction","console","window","removeEventListener","addEventListener","chartWrapper","header","entries","artists","artistLink","clubButton","parentClub","clubId","percentage","onClick","clubButtonClickHandler","find","selectedClubs","artistName","artist_names_to_ids","artistId","toLowerCase","href","rel","union","ids","overlap","prevProps","prevState","every","constructor","setChartType","clubs","showClub","createClubTable","imgPath","process","img","logo","src","alt","link","icon","faTimesCircle","backgroundColor","attending","tableRows","createTable","mostCommonArtists","mostSimilarClubs","groupClubs","stats","showClubs","showGroup","showSimilarities","showClubInfo","Rotate","faMobileAlt","faSyncAlt","spin","Intro","content","faChevronDown","intro","Outro","Section","contentClass","Navbar","App","loading","json","node_keys","link_keys","loadData","container","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c3030f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/steps.bc0e7744.md\";","import React, {Component} from 'react'\nimport {select} from 'd3-selection'\nimport {scaleBand, scaleLinear} from 'd3-scale'\nimport {axisLeft, axisBottom} from 'd3-axis'\nimport {range, max} from 'd3-array'\n\n\nclass BarChart extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.ref = React.createRef()\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {data, width, height, color} = this.props\n\t\tthis.createGraph(data, width, height, color)\n\t}\n\n\tcreateGraph = (data, w, h, color) => {\n\t\tvar margin = {top: 10, right: 0, bottom: 70, left: 40}\n\t    const width = w - margin.left - margin.right\n\t    const height = h - margin.top - margin.bottom\n\n\t\tconst svg = select(this.ref.current).attr(\"viewBox\", [0, 0, w, h])\n\n\t\tconst x = scaleBand()\n\t\t\t.domain(range(data.length))\n\t\t\t.range([margin.left, width - margin.right])\n            .padding(0.1)\n\n\t\tconst y = scaleLinear()\n\t\t\t.domain([0, max(data.map(e=>[e[1]]))])\n\t\t\t.range([height, margin.top])\n\n\t\tconst xAxis = g => g\n\t\t    .attr(\"transform\", `translate(0,${h - margin.bottom - margin.top})`)\n            .call(\n            \taxisBottom(x).tickFormat(i => data[i][0]).tickSizeOuter(0)\n            ).selectAll(\"text\")\n\t\t     .style(\"text-anchor\", \"end\")\n\t\t     .attr(\"dx\", \"-.8em\")\n\t\t     .attr(\"dy\", \".15em\")\n\t\t     .attr(\"transform\", \"rotate(-65)\")\n\n\t\tconst yAxis = g => g\n\t\t    .attr(\"transform\", `translate(${margin.left},0)`)\n\t\t    .call(axisLeft(y).ticks(5))\n\t\t    .call(g => g.select(\".domain\").remove())\n\t\t    .call(g => g.append(\"text\")\n\t\t        .attr(\"x\", -margin.left)\n\t\t        .attr(\"y\", 10)\n\t\t        .attr(\"fill\", \"currentColor\")\n\t\t        .attr(\"text-anchor\", \"start\")\n\t\t        .text(data.y))\n\n\t\tsvg\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"fill\", color)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(data)\n\t\t\t.join(\"rect\")\n\t\t\t\t.attr(\"x\", (d, i) => x(i))\n\t\t\t\t.attr(\"y\", d => y(d[1]))\n\t\t\t\t.attr(\"height\", d =>  y(0) - y(d[1]))\n\t\t\t\t.attr(\"width\", x.bandwidth())\n\n\t\tsvg.append(\"g\").call(xAxis)\n\t\tsvg.append(\"g\").call(yAxis)\n\t}\n\n\trender() {\n\t\treturn <svg ref={this.ref}\n\t\t     width={this.props.width}\n\t\t     height={this.props.height}\n\t\t/>\n\t}\n}\n\nexport default BarChart","import {select, selectAll} from 'd3-selection'\nimport {transition} from 'd3-transition'\n\n// Common chart functionality\nclass Chart{\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tthis.svg = svg\n\t\tthis.initial = true\n\t\tthis.margin = margin\n\t\tthis.categories = categories\n\t\tthis.width = w - this.margin.left - this.margin.right\n\t    this.height = h - this.margin.top - this.margin.bottom\n\t\tthis.legend = null\n\t\tthis.active = true\n\t\tthis.t = transition().duration(1500)\n\t}\n\n\tcreateGraph(nodes){\n\t\tif (!this.g) {\n\t\t\tthis.g = select(this.svg)\n\t\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"class\", \"graph\")\n\t\t\tthis.node = this.g.selectAll(\"circle\")\n\t\t}\n\t\tthis.g.transition(1000).attr(\"transform\", \"translate(0, 0), scale(1)\")\n\t}\n\n\thighlightSelected(selectedNodes){\n\t\t// highlight selected nodes if any\n\t\tthis.g\n\t\t\t.selectAll(\".nodes\")\n\t\t\t.style(\"opacity\", (d)=>{\n\t\t\t\treturn selectedNodes.includes(d)? 0.6 : 1\n\t\t\t})\n\t\tthis.g\n\t\t\t.selectAll(\".label\")\n\t\t\t.attr(\"text-decoration\", (d)=>{\n\t\t\t\treturn selectedNodes.includes(d)? \"underline\" : \"\"\n\t\t\t})\n\t}\n\n\texit(){\n\t\tthis.active = false\n\t\tselectAll(\".legend\").transition(2500).style(\"opacity\", 0).remove()\n\t}\n}\n\nexport {Chart}","import {interpolateWarm} from 'd3-scale-chromatic'\nimport React from \"react\"\n\nfunction fillColor(category, categories){\n\treturn interpolateWarm(\n\t\tcategories.indexOf(category) / categories.length\n\t)\n}\n\nconst factorial = (n) => !(n > 1) ? 1 : factorial(n - 1) * n;\n\n\nfunction artistLink(artistName, artist_names_to_ids){\n\tconst artistId = ( artist_names_to_ids[artistName] ||\n\t\t\tartistName.toLowerCase().replace(' ', '')\n\t)\n\treturn <a\n\t\thref={'https://www.residentadvisor.net/dj/' + artistId}\n\t\trel={'noopener noreferrer'}\n\t\ttarget={'_blank'}\n\t>\n\t\t{artistName}\n\t</a>\n}\n\nexport {fillColor, factorial, artistLink}\n","import {select} from 'd3-selection'\nimport {scaleLinear, scaleBand} from 'd3-scale'\nimport {max} from 'd3-array'\nimport {axisBottom} from 'd3-axis'\nimport './Chart.scss'\nimport {Chart} from \"./Chart\"\nimport {fillColor} from \"../lib\"\n\nclass BeeSwarmChart extends Chart{\n\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tsuper(svg, margin, categories, h, w)\n\t\tthis.groups = []\n\t\tthis.radius = 15\n\t}\n\n\ty = e => e.group\n\n\tx = e => {\n\t\treturn e.number_of_unique_artists !== 0?\n\t\t\te.total_number_of_artists / e.number_of_unique_artists : 0\n    }\n\n\tcreateGraph(nodes){\n\t\tsuper.createGraph(nodes)\n\n\t\t// filter out 0 attributes from nodes\n\t\tthis.filterNodes(nodes)\n\n\t\t// how many bands do we have on the y axis\n\t\tthis.groups = [...new Set(this.nodes.map(e => this.y(e)))]\n\n        this.xScale = scaleLinear()\n            .domain([1, max(this.nodes, d => this.x(d))])\n            .range([\n            \tthis.margin.left,\n\t            this.width - this.margin.right - this.margin.left\n            ])\n\n        this.yScale = scaleBand()\n            .domain(this.groups)\n            .range([\n            \tthis.margin.top,\n\t            this.height + this.margin.top - this.margin.bottom\n            ])\n\t\tthis.createLegend()\n\t\t// resize all nodes\n\t\tthis.node.selectAll(\"circle\")\n\t\t\t.transition(this.t)\n\t\t\t.attr(\"r\", this.radius)\n\n\t\t// and hide labels\n\t\tthis.node.selectAll(\"text\")\n\t\t\t.transition(this.t)\n\t\t\t.style(\"opacity\", \"0\")\n\t\t\t.style(\"display\", \"none\")\n\t\t\t.text(d => d.id + \" - \" + this.x(d).toFixed(2))\n\t}\n\n\tdrawGraph = (nodes, clickHandler, selectedNodes) => {\n\n\t\tthis.filterNodes(nodes)\n\t\tif (this.initial){\n\t\t\tthis.calculateInitialPositions()\n\t\t}\n\n\t\tthis.node = this.node.data(this.nodes, d => d.id)\n\t\tthis.node.exit()\n\t\t\t.remove()\n\n\t\tlet newNode = this.node.enter()\n\t\t\t.append(\"g\")\n\n\t\tnewNode\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"r\", this.radius)\n\t\t\t.attr(\"fill\", d => fillColor(d.group, this.categories))\n\t\t\t.attr(\"class\", \"nodes\")\n\t\t\t.style(\"fill-opacity\", this.initial? 1: 0)\n\n\t\tnewNode\n\t\t\t.append(\"text\")\n\t\t\t.style(\"opacity\", \"0\")\n\t\t\t.style(\"display\", \"none\")\n\t\t\t.text(d => d.id + \" - \" + this.x(d).toFixed(2))\n\n\t\tthis.node = this.node.merge(newNode)\n\t    // if we are transitioning from another chart:\n\t\tif (this.initial){\n\t\t    this.node.transition(this.t)\n                .attr(\"transform\", d => \"translate(\"+d.x + \",\" + d.y+\")\")\n\t\t}\n\n\t\tthis.highlightSelected(selectedNodes)\n\t\tthis.initial = false\n\t}\n\n\tcalculateInitialPositions = () => {\n\t\t// Calculate positions\n\t\tconst stepBand = Math.floor(this.yScale.step()/this.radius)\n\t\tthis.nodes.forEach((e, i) => {\n\t\t\tconst offset = Math.floor(Math.random() * stepBand)\n\t        e.x  = this.xScale(this.x(e))\n            e.y = this.yScale(this.y(e)) + offset * this.radius\n\t\t})\n\t}\n\n\tfilterNodes = (nodes) => {\n\t\tconst minDates = 10\n\t\tconst minArtists = 20\n\t\tthis.nodes = nodes.filter(e =>{\n\t\t\treturn (\n\t\t\t\tthis.x(e) !== 0 &&\n\t\t\t\te.number_of_unique_artists > minArtists &&\n\t\t\t\te.number_of_dates > minDates\n\t\t\t)\n\t\t})\n\t}\n\n\tcreateLegend(){\n\t\tconst yOffset = this.height + this.margin.top - this.margin.bottom\n\t\tconst translate = `translate(0, ${yOffset})`\n\t\tthis.legend = select(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"legend\")\n\t\t\t.attr(\"transform\", translate)\n\t\tconst axis = axisBottom(this.xScale)\n\t\t\t.tickValues(this.xScale.ticks().concat(this.xScale.domain()))\n\t\tthis.legend.call(axis)\n\n\t\tconst labelOffset = `translate(0, ${this.margin.top + 20})`\n\t\tselect(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", labelOffset)\n\t\t\t.attr(\"class\", \"label legend\")\n\t\t\t.append('text')\n\t\t    .text(\"Average number of bookings per artist by club in 2019\");\n\t}\n}\n\nexport {BeeSwarmChart}","import {select, event} from 'd3-selection'\nimport {scaleLinear, scaleBand} from 'd3-scale'\nimport {max} from 'd3-array'\nimport {axisBottom} from 'd3-axis'\nimport './Chart.scss'\nimport {Chart} from \"./Chart\"\n\n\nclass CandleStickChart extends Chart{\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tsuper(svg, margin, categories, h, w)\n\t\tthis.groups = []\n\t\tthis.tooltipData = null\n\t}\n\n\ty = e => {\n\t\treturn this.groups.indexOf(e)\n\t}\n\n\tx = e => {\n\t\treturn e.number_of_unique_artists !== 0?\n\t\t\te.total_number_of_artists / e.number_of_unique_artists : 0\n    }\n\n    candleStickData = () => {\n\t\tconst groups = this.nodes.reduce((acc, e) => {\n\t\t\tconst key = e[this.groupBy]\n\t\t\tacc[key] ? acc[key].push(e) : acc[key] = [e]\n\t\t\treturn acc\n\t\t}, {})\n\t    return Object.keys(groups).reduce((acc, key) => {\n\t    \tconst nodes = groups[key].sort((a, b) => this.x(b) - this.x(a))\n\t\t    const d = nodes.map(e => this.x(e)).sort()\n\t\t    acc.push({\n\t\t\t    'percentile_95': d[Math.floor(0.95*d.length)-1],\n\t\t\t    'percentile_5': d[Math.ceil(0.05*d.length)],\n\t\t\t\t'mean': d.reduce((acc, e) => acc + e, 0) / d.length,\n\t\t\t    'max': Math.max(...d),\n\t\t\t    'min': Math.min(...d),\n\t\t\t    'count': d.length,\n\t\t\t    'id': key,\n\t\t\t    'nodes': nodes\n\t\t    })\n\t    \treturn acc\n\t    }, []).filter((e) => e.count > 1)\n\t}\n\n\tcreateGraph(nodes){\n\t\tsuper.createGraph(nodes)\n\t\tthis.groupBy = 'region'\n\n\t\t// filter out 0 attributes from nodes\n\t\tthis.filterNodes(nodes)\n\t\tthis.data = this.candleStickData()\n\t\t// how many bands do we have on the y axis\n\t\tthis.groups = [...new Set(this.data.map(e => e.id))]\n\n        this.xScale = scaleLinear()\n            .domain([1, max(this.nodes, d => this.x(d))])\n            .range([\n            \tthis.margin.left,\n\t            this.width - this.margin.right - this.margin.left\n            ])\n\n        this.yScale = scaleBand()\n            .domain(Array.from(Array(this.groups.length).keys()))\n            .range([\n            \tthis.margin.top,\n\t            this.height + this.margin.top - this.margin.bottom\n            ])\n\t\tthis.createLegend()\n\t\tthis.bw = this.yScale.bandwidth();\n\t}\n\n\texitPrevChart(){\n\t\tlet n = 0\n\t\tthis.node.exit()\n\t\t\t.each(() => n++)\n\t\t\t.attr(\"class\", \"candlestick\")\n\t\t\t.transition(\"exit\").duration(2000)\n            .attr(\"transform\", d => {\n            \tconst agg = this.data.filter(e => e.id === d[this.groupBy])[0]\n\t            const x = agg? this.xScale(agg.mean) : 0\n            \tconst y = this.yScale(this.y(d.region)) + this.bw / 2\n\t            if (x === 0){\n\t            \treturn \"scale(0, 0)\"\n\t            }\n            \treturn \"translate(\"+ x + \",\" + (y? y : 0) +\")\"\n            })\n\t\t\t.on('end', () => {\n\t\t\t\tn--\n\t\t\t\tif (n === 0){\n\t\t\t\t\tthis.drawBox()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.transition().duration(2000)\n\t\t\t.remove()\n\t}\n\n\tdrawBox(){\n\t\tlet n = 0\n\n\t\tthis.newNode\n\t\t\t.each(() => n++)\n\t\t\t.append(\"rect\")\n\t\t\t.attr(\"height\", 0)\n\t\t\t.attr(\"width\", 0)\n\t        .attr(\"class\", \"fill\")\n\t\t\t.attr(\"x\", d => this.xScale(d.mean))\n\t\t\t.attr(\"rx\", 15)\n\t\t\t.attr(\"y\", d => this.yScale(this.y(d.id)) + this.bw / 2)\n\t\t\t.attr(\"ry\", 15)\n\t\t\t.transition(\"drawbox\").duration(1000)\n\t\t\t.attr(\"height\", this.bw)\n\t\t\t\t.attr(\"x\", d => this.xScale(d.percentile_5))\n\t\t\t\t.attr(\"y\", d => this.yScale(this.y(d.id)))\n\t\t\t\t.attr('width', d => {\n\t\t\t\t\tconst start = this.xScale(d.percentile_95)\n\t\t\t\t\tconst end = this.xScale(d.percentile_5)\n\t\t\t\t\treturn start - end\n\t\t\t\t})\n\t\t\t\t.on(\"end\", () => {\n\t\t\t\t\tn--\n\t\t\t\t\tif (n === 0){\n\t\t\t\t\t\tthis.drawWhiskers()\n\t\t\t\t\t\tthis.drawMean()\n\t\t\t\t\t\tthis.addLabel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t}\n\n\tdrawWhiskers(){\n\t\tconst offset = this.bw / 2\n\t\tthis.newNode\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", d => this.xScale(d.percentile_5))\n\t\t\t.attr(\"x2\", d => this.xScale(d.percentile_5))\n\t\t\t.attr(\"y1\", d => this.yScale(this.y(d.id)) + offset)\n\t\t\t.attr(\"y2\", d => this.yScale(this.y(d.id)) + offset)\n\t        .attr(\"class\", \"line\")\n\t\t\t.transition(\"drawWhiskers1\").duration(1000)\n\t\t\t\t.attr(\"x2\", d => this.xScale(d.min))\n\n\t\tthis.newNode\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", d => this.xScale(d.percentile_95))\n\t\t\t.attr(\"x2\", d => this.xScale(d.percentile_95))\n\t\t\t.attr(\"y1\", d => this.yScale(this.y(d.id)) + offset)\n\t\t\t.attr(\"y2\", d => this.yScale(this.y(d.id)) + offset)\n\t        .attr(\"class\", \"line\")\n\t\t\t.transition(\"drawWhiskers2\").duration(1000)\n\t\t\t\t.attr(\"x2\", d => this.xScale(d.max))\n\n\t}\n\n\taddLabel(){\n\t\t// text\n\t\tthis.newNode\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"x\", d => {\n\t\t\t\tconst start = this.xScale(d.percentile_5)\n\t\t\t\tconst length = this.xScale(d.percentile_95) - start\n\t\t\t\treturn start + (length / 2)\n\t\t\t})\n\t\t\t.attr(\"y\", d => this.yScale(this.y(d.id)) + this.bw/2)\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"class\", \"label\")\n\t\t\t.style(\"fill\", \"#fff\")\n            .style(\"font-size\", 12)\n            .text(d => `${d.id} (${d.count})`)\n\t}\n\n\tdrawMean(){\n\t\t// mean\n\t\tthis.newNode\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", d => this.xScale(d.mean))\n\t\t\t.attr(\"x2\", d => this.xScale(d.mean))\n\t\t\t.attr(\"y1\", d => this.yScale(this.y(d.id)))\n\t\t\t.attr(\"y2\", d => this.yScale(this.y(d.id)) + this.bw)\n\t        .attr(\"class\", \"mean\")\n\t}\n\n\tdrawGraph = (nodes, clickHandler, selectedNodes) => {\n\t\tthis.filterNodes(nodes)\n\n\t\tthis.node = this.node.data(this.data, d=> d.id)\n\n\t\tthis.newNode = this.node.enter()\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"candlestick\")\n\n\t\tthis.exitPrevChart()\n\n\t\tthis.newNode.on(\"click\", d => this.click(d))\n\t\tthis.tooltip = select(\"#tooltip\")\n\n\t\tthis.node = this.node.merge(this.newNode)\n\t\tthis.initial = false\n\t}\n\n\tclick = (d) => {\n\t\tif(this.tooltipData !== d){\n\t\t    this.tooltip.transition().duration(200).style(\"opacity\", 1)\n\t\t\tthis.tooltip.html(this.detail(d))\n\t\t         .style(\"left\", (event.pageX) + \"px\")\n\t\t         .style(\"top\", (event.pageY - 28) + \"px\")\n\t\t\tthis.tooltipData = d\n\t\t}else{\n\t\t    this.tooltip.transition().duration(500).style(\"opacity\", 0)\n\t\t\tthis.tooltipData = null\n\t\t}\n\t}\n\n\tfilterNodes = (nodes) => {\n\t\tconst minDates = 10\n\t\tconst minArtists = 20\n\t\tthis.nodes = nodes.filter(e =>{\n\t\t\treturn (\n\t\t\t\tthis.x(e) !== 0 &&\n\t\t\t\te.number_of_unique_artists > minArtists &&\n\t\t\t\te.number_of_dates > minDates\n\t\t\t)\n\t\t})\n\t}\n\n\tcreateLegend(){\n\t\tconst yOffset = this.height + this.margin.top - this.margin.bottom\n\t\tconst translate = `translate(0, ${yOffset})`\n\t\tthis.legend = select(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"legend\")\n\t\t\t.attr(\"transform\", translate)\n\t\tconst axis = axisBottom(this.xScale)\n\t\t\t.tickValues(this.xScale.ticks().concat(this.xScale.domain()))\n\t\tthis.legend.call(axis)\n\n\t\tconst labelOffset = `translate(0, ${this.margin.top + 20})`\n\t\tselect(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", labelOffset)\n\t\t\t.attr(\"class\", \"label legend\")\n\t\t\t.append('text')\n\t\t    .text(\"Average number of bookings per artist by region in 2019\")\n\t}\n\n\tdetail(data){\n\t\tconst rows = data.nodes.map(club => {\n\t\t\treturn `<tr>\n\t\t\t\t<td>${club.id}</td>\n\t\t\t\t<td>\n\t\t\t\t\t${(\n\t\t\t\t\t\tclub.total_number_of_artists / club.number_of_unique_artists\n\t\t\t\t\t).toFixed(1)}\n\t\t\t\t</td>\n\t\t\t</tr>`\n\t\t})\n\t\treturn `<h2 class=\"center\">${data.id}</h2>\n\t\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Club Name</th>\n\t\t\t\t\t<th>Average bookings per artist</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t${rows.join(\"\")}\n\t\t\t</tbody>\n\t\t</table>`\n\t}\n}\n\nexport {CandleStickChart}","// taken from: https://observablehq.com/@gka/cheap-fit-text-to-circle\nconst CHAR_W = {\n\tA:7,a:7,B:8,b:7,C:8,c:6,D:9,d:7,E:7,e:7,F:7,f:4,G:9,g:7,H:9,h:7,I:3,i:3,\n\tJ:5,j:3,K:8,k:6,L:7,l:3,M:11,m:11,N:9,n:7,O:9,o:7,P:8,p:7,Q:9,q:7,R:8,\n\tr:4,S:8,s:6,T:7,t:4,U:9,u:7,V:7,v:6,W:11,w:9,X:7,x:6,Y:7,y:6,Z:7,z:5,\n\t'.':2,',':2,':':2,';':2\n}\n\nfunction fitTextToScreen(text, radius){\n\tconst fittedText = text.split(\"\").reduce((acc, e) => {\n\t\tif (acc.length < 1.6 * radius){\n\t\t\tacc.length = acc.length + (CHAR_W[e] || CHAR_W.a)\n\t\t\tacc.text = acc.text + e\n\t\t}\n\t\treturn acc\n\t}, {length: 0, text: ''}).text\n\tif (fittedText === text){\n\t\treturn text\n\t}\n\treturn fittedText + \"...\"\n}\n\nexport {fitTextToScreen}","import {forceSimulation, forceCenter, forceX, forceY} from \"d3-force\"\nimport {forceCollide} from \"d3-force\"\nimport {select, event} from 'd3-selection'\nimport {drag} from 'd3-drag'\nimport {zoom} from \"d3-zoom\"\nimport {timer} from \"d3-timer\"\nimport {fitTextToScreen} from \"../textHandling\"\nimport {fillColor} from \"../lib\"\nimport './Chart.scss'\nimport {Chart} from \"./Chart\"\n\n\nclass ClusterChart extends Chart{\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tsuper(svg, margin, categories, h, w)\n\t\tthis.clusters = {}\n\t}\n\n\tcreateGraph(nodes){\n\t\tsuper.createGraph(nodes)\n\t\tconst padding = 1\n\n\t\tthis.simulation = forceSimulation()\n\t\t\t.force('center', forceCenter(this.width/2, this.height/2))\n\t\t\t.force('x', forceX(this.width / 2).strength(0.01))\n\t\t\t.force('y', forceY(this.height / 2).strength(0.01))\n\t\t\t.force('cluster', this.cluster().strength(0.5))\n\t\t\t.force('collide', forceCollide(d => d.radius + padding))\n\n\t\tthis.zoomHandler = zoom()\n\t\t\t.scaleExtent([0.8, 5])\n\t\t\t.filter(() => {\n\t\t\t\treturn event.type !== \"wheel\" || event.target.nodeName !== \"svg\"\n\t\t\t})\n\t\t\t.on(\"zoom\", () => this.zoom(this.g))\n\t\tselect(this.svg).call(this.zoomHandler)\n\n\t\tthis.decay()\n\t\tthis.createLegend()\n\t\t// resize all nodes if we were coming from a different graph\n\t\tthis.node.selectAll(\"circle\")\n\t\t\t.transition(this.t)\n\t\t\t.attr(\"r\", d => this.calculateRadius(d))\n\n\t\t// and show labels\n\t\tthis.node.selectAll(\"text\")\n\t\t\t.transition(this.t)\n\t\t\t.style(\"opacity\", \"1\")\n\t\t\t.style(\"display\", \"block\")\n\t\t\t.text(d => fitTextToScreen(d.id, d.radius))\n\t}\n\n\tdecay = () => {\n\t\tconst transitionTime = 3000\n\t\tconst t = timer((elapsed) => {\n\t        var dt = elapsed / transitionTime\n\t\t    this.simulation\n\t\t\t    .force('collide')\n\t\t\t    .strength(Math.pow(dt, 2))\n\t\t    if (dt >= 1.0){\n\t\t        t.stop()\n\t\t\t    // disable forces for less jitter\n\t\t\t    this.simulation.force(\"x\", null)\n\t\t\t    this.simulation.force(\"y\", null)\n\t\t\t    this.simulation.force(\"center\", null)\n                this.simulation.force('cluster', this.cluster().strength(0.1))\n\t\t    }\n\t\t})\n\t}\n\n\tzoom = (zoomGroup) => {\n\t\tif (!this.active) return\n\t\tzoomGroup.attr(\"transform\", event.transform)\n\t}\n\n\tdrawGraph = (nodes, clickHandler, selectedNodes) => {\n\t\t// prevent nodes from jumping on filter operations\n\t\tif (!this.initial){\n\t\t\tthis.simulation.stop()\n\t\t}\n\t\t// todo this mutates and is ugly\n\t\tif (this.initial){\n\t\t\tthis.calculateInitialPositions(nodes)\n\t\t}\n\n\t\tthis.node = this.node.data(nodes, d=> d.id)\n\t\tthis.node.exit()\n\t\t\t.transition().duration(2000)\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.remove()\n\n\t\tlet newNode = this.node.enter()\n\t\t\t.append(\"g\")\n\t\t\t.on(\"click\", d => clickHandler(d))\n\t\t\t.call(drag()\n\t\t\t\t\t.on(\"start\", d => this.dragstarted(d, this.simulation))\n\t\t\t\t\t.on(\"drag\", d => this.dragged(d))\n\t\t\t\t\t.on(\"end\", d => this.dragended(d, this.simulation))\n\t\t\t)\n\n\n\t\tnewNode\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"r\", d => this.calculateRadius(d))\n\t\t\t.attr(\"fill\", d => fillColor(d.group, this.categories))\n\t\t\t.attr(\"class\", \"nodes\")\n\t\t\t.style(\"fill-opacity\", this.initial? 1: 0)\n\t\t\t.transition().duration(2000).style(\"fill-opacity\", 1)\n\n\t\tnewNode\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"class\", \"label\")\n\t\t\t.style(\"fill\", \"#fff\")\n\t\t\t.style(\"opacity\", 0)\n            .style(\"font-size\", 12)\n\t\t\t.text(d => fitTextToScreen(d.id, d.radius))\n\t\t\t.transition().duration(2000).style(\"opacity\", 1)\n\n\t\tthis.node = this.node.merge(newNode)\n\n\t\tif (!this.initial){\n\t\t\t// restart simulation so nodes wont get stuck on next filter\n\t\t\tthis.simulation.alphaTarget(0.3).restart()\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.simulation.alphaTarget(0)\n\t\t\t}, 100)\n\t\t\tthis.decay()\n\t\t}\n\t\tthis.highlightSelected(selectedNodes)\n\n\t\tthis.simulation\n\t\t\t.on('tick', this.tick)\n\t\t\t.nodes(nodes)\n\t\tthis.initial = false\n\t}\n\n\tcalculateInitialPositions = (nodes) => {\n\t\tconst radius = Math.min(this.width, this.height) / 2\n\t\tconst groupCount = Math.max(...nodes.map(e => e.group))\n\t\tthis.clusters = new Array(groupCount)\n\t\tnodes.forEach((e) => {\n\t\t\t// position along a circle, clustered by group\n\t\t\tconst g = e.group\n\t\t\tconst angle = g / groupCount * 2 * Math.PI\n\t        e.x  = Math.cos(angle) * radius + this.width / 2 + Math.random()\n            e.y = Math.sin(angle) * radius + this.height / 2 + Math.random()\n\n\t\t\t// set the radius of each node\n\t\t\tconst r = this.calculateRadius(e)\n\t\t\te.radius = r\n\n\t\t\tif (!this.clusters[g] || r > this.clusters[g]){\n\t\t\t\tthis.clusters[e.group] = e\n\t\t\t}\n\t\t})\n\t}\n\n\ttick = () => {\n\t\tthis.node\n\t\t\t.attr(\"transform\", d => \"translate(\"+d.x + \",\" + d.y+\")\")\n\t}\n\n\tcluster = () => {\n\t\t// adapted from\n\t\t// https://bl.ocks.org/ericsoco/38b4f8b51ecf116e6fb0727d25687e8e\n\t\tlet nodes,\n\t\t\tstrength = 0.1\n\n\t\tconst force = (alpha) => {\n\t\t\t// scale + curve alpha value\n\t\t\talpha *= strength * alpha\n\n\t\t\tnodes.forEach((d) => {\n\t\t\t\tlet cluster = this.clusters[d.group]\n\t\t\t\tif (cluster === d) return\n\t\t\t\tlet x = d.x - cluster.x,\n\t\t\t\t\ty = d.y - cluster.y,\n\t\t\t\t\tl = Math.sqrt(x * x + y * y),\n\t\t\t\t\tr = d.radius + cluster.radius\n\n\t\t\t\tif (l !== r) {\n\t\t\t\t\tl = (l - r) / l * alpha\n\t\t\t\t\td.x -= x *= l\n\t\t\t\t\td.y -= y *= l\n\t\t\t\t\tcluster.x += x\n\t\t\t\t\tcluster.y += y\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tforce.initialize = function (_) {\n\t\t\tnodes = _\n\t\t}\n\n\t\tforce.strength = _ => {\n\t\t\tstrength = _ == null ? strength : _\n\t\t\treturn force\n\t\t}\n\n\t\treturn force\n\t}\n\n\tdragstarted = (d, simulation) => {\n\t\tif (!this.active) return\n\t\tif (!event.active) simulation.alphaTarget(0.3).restart()\n\t\td.fx = d.x\n\t\td.fy = d.y\n\t}\n\n\tdragged = d => {\n\t\tif (!this.active) return\n\t\td.fx = event.x\n\t\td.fy = event.y\n\t}\n\n\tdragended = (d, simulation) => {\n\t\tif (!this.active) return\n\t\tif (!event.active) simulation.alphaTarget(0)\n\t\td.fx = null\n\t\td.fy = null\n\t}\n\n\tcreateLegend(){\n\t\tconst sizes = [10000, 1000, 100, 10]\n\t\tconst radiuses = sizes.map(e => {\n\t\t\treturn this.calculateRadius({followers: e})\n\t\t})\n\n\t\tconst x = 10\n\t\tconst lineHeight = 30\n\t\tconst y = this.height - 2 * Math.max(...radiuses)\n\n\t    this.legend = select(this.svg)\n\t        .append(\"g\")\n\t\t\t.attr(\"class\", \"legend\")\n\t        .attr(\"x\", x)\n\t        .attr(\"y\", y)\n\t        .attr(\"transform\", `translate(${x}, ${y})`)\n\t        .style(\"text-align\", \"center\")\n\n\t\tconst max = Math.max(...radiuses)\n\t\t// add nodes\n\t\tthis.legend.selectAll(\"rects\")\n\t\t.data(radiuses)\n\t\t.enter()\n\t\t.append(\"circle\")\n\t\t    .attr(\"cx\", max)\n\t\t    .attr(\"cy\", d => 2 * max - (d) + 0.5*lineHeight)\n\t\t    .attr(\"r\", d => d)\n\t\t\t.attr(\"fill\", \"white\")\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"alignment-baseline\", \"middle\")\n\n\t\tthis.legend.selectAll(\"rects\")\n\t\t.data(radiuses)\n\t\t.enter()\n\t\t.append(\"text\")\n\t\t    .attr(\"x\", max)\n\t\t    .attr(\"y\", (d, i) => {\n\t\t        // this is messy, but the best looking option I could find\n\t\t\t    // smallest circle is labelled in center, others at the top\n\t\t        if (i === 0){\n\t\t            return 2 * max - 1.4 * d\n\t\t\t    }\n\t\t        if (i === 1){\n\t\t            return 2 * max - 1.2 * d\n\t\t\t    }\n\t\t        return 2 * max - (d) + 0.5*lineHeight\n\t\t    })\n\t\t\t.text((d, i) => sizes[i])\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\n\t\tthis.legend\n\t\t\t.append('text')\n\t\t\t.text(\"RA Club Followers\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"x\", max)\n\t\t\t.attr(\"y\", 2 * max + lineHeight)\n\t}\n\n\texit(){\n\t\tsuper.exit()\n\t\tthis.simulation.stop()\n\t}\n\n\tcalculateRadius(e){\n\t\t// scale node radius according to svg size\n\t\tconst m = Math.min(this.width, this.height) / 800\n\t\treturn 12 * Math.log(Math.sqrt(e.followers)) * m\n\t}\n\n}\n\n\n\nexport {ClusterChart}","import React, {Component} from \"react\"\nimport {Scrollama, Step} from \"react-scrollama\"\nimport marked from \"marked\"\nimport steps from \"./steps.md\"\nimport \"./ScrollyTelling.scss\"\nimport {BeeSwarmChart} from \"./charts/BeeSwarmChart\"\nimport {CandleStickChart} from \"./charts/CandleStickChart\"\nimport {ClusterChart} from \"./charts/ClusterChart\"\nimport {factorial} from \"./lib\"\n\n\nclass ScrollyTelling extends Component {\n\n\tstepsData = [\n\t\t{draw: true, filters: {region: \"all\"}, selectedNodes: [], scroll: true},\n\t\t{filters: {region: \"Berlin\"}, chartType: ClusterChart, selectedNodes: []},\n\t\t{filters: {country: \"all\"}, chartType: ClusterChart, selectedNodes: [] },\n\t\t{filters: {region: \"all\"}, chartType: BeeSwarmChart, selectedNodes: []},\n\t\t{filters: {region: \"all\"}, chartType: BeeSwarmChart, selectedNodes: []},\n\t\t{filters: {region: \"all\"}, chartType: CandleStickChart, selectedNodes: []},\n\t]\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tsteps: null,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// fetch the markdown and replace any variables\n\t\tconst {source, target, weight} = this.props.links.reduce((acc, e)=>{\n\t\t\treturn acc.weight > e.weight? acc : e\n\t\t}, {weight: 0})\n\n\t\t// Show De School and Berghain in step 4\n\t\tthis.stepsData[2].selectedNodes = this.props.nodes.filter((e) => {\n\t\t\treturn [112491, 5031].includes(e.club_id)\n\t\t})\n\t\tconst clubCount = this.props.nodes.length\n\t\tconst total = this.props.links.reduce((acc, e) => acc+e.weight, 0)\n\t\tconst averageWeight = total / this.props.links.length\n\t\tconst combinations = Math.floor(\n\t\t\tfactorial(clubCount) / (2 * factorial(clubCount - 2))\n\t\t)\n\n\t\tconst averageResidency = (this.props.nodes.reduce((acc, e) => {\n\t\t\tif (e.number_of_unique_artists !== 0){\n\t\t\t\treturn acc + e.total_number_of_artists / e.number_of_unique_artists\n\t\t\t}\n\t\t\treturn acc\n\t\t}, 0) / clubCount).toFixed(2)\n\n\t\tconst data = {\n\t\t\t\"$clubCount\": clubCount,\n\t\t\t\"$linkCount\": this.props.links.length,\n\t\t\t\"$source\": source,\n\t\t\t\"$target\": target,\n\t\t\t\"$weight\": (weight*100).toFixed(0),\n\t\t\t\"$combinations\": combinations,\n\t\t\t\"$averageWeight\": (averageWeight*100).toFixed(0.2),\n\t\t\t\"$averageResidency\": averageResidency,\n\t\t}\n\n\t\tfetch(steps)\n\t\t\t.then(response => {\n\t\t\t\treturn response.text()\n\t\t\t})\n\t\t\t.then(text => {\n\t\t\t\tlet html = marked(text)\n\t\t\t\tObject.keys(data).forEach(k => html = html.replace(k, data[k]))\n\t\t\t\tconst steps = html.split('<hr>')\n\t\t\t\tthis.setState({steps: steps})\n\t\t\t})\n\t}\n\n\tstep(stepHtml) {\n\t\treturn <div className={\"step \"}>\n\t\t\t<div dangerouslySetInnerHTML={{__html: stepHtml}} />\n\t\t</div>\n\t}\n\n\trender() {\n\n\t\tif (!this.state.steps){\n\t\t\treturn \"\"\n\t\t}\n\n\t\tconst steps = this.state.steps.map((step, i) => {\n\t\t\treturn <Step key={i} data={this.stepsData[i]}>\n\t\t\t\t{this.step(step)}\n\t\t\t</Step>\n\t\t})\n\t\treturn <div className={\"scroller\"}>\n\t\t\t<Scrollama\n\t\t\t\tonStepEnter={this.props.enter}\n\t\t\t\toffset={0.75}\n\t\t\t\tdebug\n\t\t\t>\n\t\t\t\t{steps}\n\t\t\t</Scrollama>\n\t\t</div>\n\t}\n}\n\nexport default ScrollyTelling","// wrapper around chart classes that allows us to switch between them\n// for transition purposes\n\nclass ChartWrapper{\n\n\tconstructor(svg, margin, categories, h, w, ChartType) {\n\t\tthis.svg = svg\n\t\tthis.initial = true\n\t\tthis.margin = margin\n\t\tthis.categories = categories\n\t\tthis.h = h\n\t\tthis.w = w\n\t\tthis.chart = new ChartType(svg, margin, categories, h, w)\n\t}\n\n    setChartType(nodes, ChartType){\n\t    this.chart.exit()\n        const newChart = new ChartType(\n            this.svg, this.margin, this.categories, this.h, this.w\n        )\n        newChart.g = this.chart.g\n        newChart.node = this.chart.node\n\t    newChart.initial = true\n        newChart.createGraph(nodes)\n        this.chart = newChart\n    }\n\n}\n\nexport {ChartWrapper}","import React, {Component} from 'react'\nimport './container.scss'\nimport BarChart from './BarChart'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport ScrollyTelling from \"./ScrollyTelling\"\nimport {fillColor, artistLink} from \"./lib\"\nimport {BeeSwarmChart} from \"./charts/BeeSwarmChart\"\nimport {CandleStickChart} from \"./charts/CandleStickChart\"\nimport {ClusterChart} from \"./charts/ClusterChart\"\nimport {ChartWrapper} from \"./charts/ChartWrapper\"\n\n\nclass Container extends Component {\n\tcontrolHeight = 70\n\tmargin = {top: 10, right: 20, bottom: 20, left: 50}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.ref = React.createRef()\n\t\t// these are the currently selected values\n\t\t// if you need all values, you should use this.props.data\n\t\tthis.nodes = this.props.data.nodes\n\n\t\tthis.state = {\n\t\t\tselectedNodes: [],\n\t\t\tdata: {},\n\t\t\tfilters: {},\n\t\t\tdraw: true,\n\t\t\tchartType: ClusterChart,\n\t\t\twidth: document.documentElement.clientWidth,\n\t\t\tsvgWidth: document.documentElement.clientWidth,\n\t\t\tsvgHeight: document.documentElement.clientHeight - this.controlHeight\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('resize', this.updateWindowDimensions)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateWindowDimensions()\n\t\twindow.addEventListener('resize', this.updateWindowDimensions)\n\t\t// sort so adjacent groups get different colors\n\t\tthis.categories = [\n\t\t\t...new Set(this.nodes.map(e => e.group).sort((a, b) => {\n\t\t\t\treturn a % 2 - b % 2 || a - b\n\t\t\t}))\n\t\t]\n\n\t\tconst svg = this.ref.current\n\t\tthis.chartWrapper = new ChartWrapper(\n\t\t\tsvg, this.margin, this.categories,\n\t\t\tthis.state.svgHeight, this.state.svgWidth,\n\t\t\tthis.state.chartType\n\t\t)\n\t}\n\n\tonNodeClick = (node) => {\n\t\t// we allow max two selected nodes at a time\n\t\tlet selectedNodes = (this.state.selectedNodes || [])\n\t\tconst index = selectedNodes.indexOf(node)\n\t\tif (index !== -1){\n\t\t\tselectedNodes.splice(index, 1)\n\t\t}else{\n\t\t\tselectedNodes.push(node)\n\t\t}\n\t\tselectedNodes = selectedNodes.slice(-2)\n\t\tthis.setState({selectedNodes: selectedNodes})\n\t}\n\n\tcreateTable(header, data){\n\t\treturn <tr key={header+\"row\"}>\n\t\t\t<td key={header+\"cell\"}>{header}</td>\n\t\t\t{data.map((e, i) => {\n\t\t\t\treturn <td key={header+\"-\"+i}>{e}</td>\n\t\t\t})}\n\t\t</tr>\n\t}\n\n\tmostCommonArtists(){\n\t\treturn this.state.selectedNodes.map((node, i) => {\n\t\t\treturn Object.entries(node.artists)\n\t\t\t\t.sort((a, b) => b[1] - a[1])\n\t\t\t\t.slice(0, 5)\n\t\t\t\t.map((e, j) => {\n\t\t\t\t\tconst key = \"artist\"+i+\"-\"+j\n\t\t\t\t\treturn <li key={key}>\n\t\t\t\t\t\t{this.artistLink(e[0])}{\" - \" + e[1]}\n\t\t\t\t\t</li>\n\t\t\t\t})\n\t\t})\n\t}\n\n\tmostSimilarClubs(){\n\t\treturn this.state.selectedNodes.map(f => {\n\t\t\treturn this.props.data.links.filter((e) => {\n\t\t\t\treturn [e.source, e.target].includes(f.id)\n\t\t\t})\n\t\t\t.sort((a, b) => b.weight - a.weight)\n\t\t\t.slice(0, 5)\n\t\t\t.reduce((acc, e) => {\n\t\t\t\tconst club = e.source !== f.id? e.source : e.target\n\t\t\t\tacc.push(this.clubButton(f, club, e.weight))\n\t\t\t\treturn acc\n\t\t\t}, [])\n\t\t})\n\t}\n\n\tclubButton(parentClub, clubId, percentage=null){\n\t\treturn <li key={clubId}>\n\t\t\t<button\n\t\t\t\tclassName={\"clubButton\"}\n\t\t\t\tonClick={(e) => this.clubButtonClickHandler(clubId, parentClub)}\n\t\t\t>\n\t\t\t\t{clubId}\n\t\t\t</button> {percentage? \" - \" + (percentage*100).toFixed() + \"%\": \"\" }\n\t\t</li>\n\t}\n\n\tclubButtonClickHandler(clubId, parentClub){\n\t\tconst club = this.nodes.find(e => e.id === clubId)\n\t\t// we want to maintain the position of the parent club in selected club\n\t\tconst selectedClubs = this.state.selectedNodes[0] === parentClub?\n\t\t\t[parentClub, club] : [club, parentClub]\n\t\tthis.setState({selectedNodes: selectedClubs})\n\t}\n\n\tartistLink(artistName){\n\t\treturn artistLink(artistName, this.props.data.artist_names_to_ids)\n\t}\n\n\tshowSimilarities(){\n\t\tif (this.state.selectedNodes.length !== 2){\n\t\t\treturn ''\n\t\t}\n\n\t\tconst artists = this.state.selectedNodes.reduce((acc, e) => {\n\t\t\tacc.push(Object.keys(e.artists))\n\t\t\treturn acc\n\t\t}, [])\n\t\tconst union = artists[0].filter(e => artists[1].includes(e))\n\n\t\tif (union.length === 0){\n\t\t\treturn <div className={'similarities'}>\n\t\t\t\t<h4>No overlap in lineups - no common artists</h4>\n\t\t\t</div>\n\t\t}\n\n\t\tconst ids = this.state.selectedNodes.map(e => e.id)\n\t\tconst overlap = (this.props.data.links.find(e => {\n\t\t\treturn ids.includes(e.source) && ids.includes(e.target)\n\t\t}).weight * 100 ).toFixed(2)\n\n\t\treturn <div className={'similarities'}>\n\t\t\t<h4>\n\t\t\t\t{overlap}% overlap in lineups - {union.length} common artists:\n\t\t\t</h4>\n\t\t\t<ul>\n\t\t\t\t{union.map((e) => <li key={e}>{this.artistLink(e)}</li>)}\n\t\t\t</ul>\n\t\t</div>\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState){\n\t\tconst filters = this.state.filters\n\t\tif (Object.keys(filters).length !== 0){\n\t\t\tthis.nodes = this.props.data.nodes.filter((e) => {\n\t\t\t\treturn Object.keys(filters).every((f) => {\n\t\t\t\t\treturn filters[f] === \"all\" || e[f] === filters[f]\n\t\t\t\t})\n\t\t\t})\n\t\t}else{\n\t\t\tthis.nodes = this.props.data.nodes\n\t\t}\n\t\tif (this.state.chartType){\n\t\t\tconsole.log(this.state.chartType.name);\n\t\t\tconsole.log(this.chartWrapper.chart.constructor.name);\n\t\t\tif (this.state.chartType.name !== this.chartWrapper.chart.constructor.name){\n\t\t\t    this.chartWrapper.setChartType(this.nodes, this.state.chartType)\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.draw){\n\t\t\tif (this.chartWrapper.chart.initial){\n\t\t\t\tthis.chartWrapper.chart.createGraph(this.nodes)\n\t\t\t}\n\t\t\tthis.chartWrapper.chart.drawGraph(\n\t\t\t\tthis.nodes,\n\t\t\t\tthis.onNodeClick,\n\t\t\t\tthis.state.selectedNodes\n\t\t\t)\n\t\t}\n\t}\n\n\tshowClubs(){\n\t\tconst clubs = this.state.selectedNodes\n\t\treturn <div className={\"clubInfo\"+clubs.length}>\n\t\t\t{clubs.map((e) => this.showClub(e))}\n\t\t\t{this.createClubTable()}\n\t\t</div>\n\t}\n\n\tshowClub(node){\n\t\tconst imgPath =`${process.env.PUBLIC_URL}/img/`\n\t\tconst img = node.logo === '' ? <div className={'placeholder'}/> : <div className={\"image center\"}>\n\t\t\t<img src={imgPath+node.logo.split(\"/\").slice(-1)[0]} alt={node.id} />\n\t\t</div>\n\t\tconst color = fillColor(node.group, this.categories)\n\t\tconst link = 'https://www.residentadvisor.net/club.aspx?id=' + node.club_id\n\n\t\treturn <div key={node.club_id} className={\"clubPanel\"}>\n\t\t\t<button\n\t\t\t\tclassName={\"clubButton\"}\n\t\t\t\tid={\"close\"}\n\t\t\t\tonClick={(e) => this.onNodeClick(node)}\n\t\t\t>\n\t\t\t\t <FontAwesomeIcon icon={faTimesCircle} />\n\t\t\t</button>\n\t\t\t<h3 style={{backgroundColor: color}} className={\"clubName\"}>\n\t\t\t\t<a rel={'noopener noreferrer'} target={'_blank'} href={link}>\n\t\t\t\t\t{node.id}\n\t\t\t\t</a>\n\t\t\t</h3>\n\t\t\t{img}\n\t\t\t<div className={\"center\"}>\n\t\t\t\t{node.region}\n\t\t\t\t{node.region === node.country ? \"\" : \" - \" + node.country}\n\t\t\t</div>\n\t\t</div>\n\t}\n\n\tcreateClubTable(){\n\t\tif (this.state.selectedNodes.length === 0){\n\t\t\treturn \"\"\n\t\t}\n\t\tconst rows = this.state.selectedNodes.map(club => {\n\t\t\treturn [\n\t\t\t\tclub.number_of_dates,\n\t\t\t\tclub.number_of_unique_artists,\n\t\t\t\tclub.total_number_of_artists,\n\t\t\t\tclub.followers,\n\t\t\t\t(club.attending / club.number_of_dates).toFixed(1),\n\t\t\t\t(club.total_number_of_artists / club.number_of_unique_artists).toFixed(1),\n\t\t\t\t(club.total_number_of_artists / club.number_of_dates).toFixed(2),\n\t\t\t]\n\t\t})\n\n\t\tconst headers = [\n\t\t\t\"Number of events\",\n            \"Unique artists\",\n            \"Total artists booked\",\n            \"Followers\",\n\t\t\t\"Average event attendance\",\n\t\t\t\"Average bookings per artist\",\n\t\t\t\"Average artists per date\",\n\t\t]\n\n\t\tlet tableRows = headers.map((e, i) => {\n\t\t\treturn <tr key={i}>\n\t\t\t\t<td key={e} >{e}</td>\n\t\t\t\t{rows.map((e, j) => <td key={i+\"-\"+j}>{e[i]}</td>)}\n\t\t\t</tr>\n\t\t}).concat(\n\t\t\tthis.createTable(\"Most Booked Artists\", this.mostCommonArtists())\n\t\t).concat(\n\t\t\tthis.createTable(\"Most Similar Clubs\", this.mostSimilarClubs())\n\t\t)\n\n\t\tconst header = rows.length !== 2? null : <thead>\n\t\t\t<tr>\n\t\t\t\t<th key={\"empty\"} />\n\t\t\t\t{this.state.selectedNodes.map(e=><th key={e.id}>{e.id}</th>)}\n\t\t\t</tr>\n\t\t</thead>\n\t\treturn <table>\n\t\t\t{header}\n\t\t\t<tbody>{tableRows}</tbody>\n\t\t</table>\n\t}\n\n\tshowGroup(){\n\t\tif (this.state.selectedNodes.length !== 1 ){\n\t\t\treturn \"\"\n\t\t}\n\t\tconst club = this.state.selectedNodes[0]\n\t\tconst groupClubs = this.props.data.nodes.filter(e => {\n\t\t\treturn club.group === e.group\n\t\t})\n\t\tif (groupClubs.length === 1){\n\t\t\treturn \"\"\n\t\t}\n\n\t\tconst stats = groupClubs.reduce((acc, e) => {\n\t\t\tacc[e.region] = (acc[e.region] + 1 || 1)\n\t\t\treturn acc\n\t\t}, {})\n\n\t\tconst color = fillColor(club.group, this.categories)\n\t\treturn <div style={{width: '50%'}}>\n\t\t\t<h3 >\n\t\t\t\tOther clubs in this cluster\n\t\t\t</h3>\n\t\t\t<BarChart\n\t\t\t\tdata={Object.entries(stats)}\n\t\t\t\twidth={312}\n\t\t\t\theight={210}\n\t\t\t\tcolor={color}\n\t\t\t/>\n\t\t\t<ul>\n\t\t\t\t{groupClubs.map(e => this.clubButton(club, e.id))}\n\t\t\t</ul>\n\t\t</div>\n\t}\n\n\tsetFilters =(e) => {\n\t\tconst filter = {}\n\t\tconst v = e.target.name === \"rank\" && e.target.value !== \"all\"?\n\t\t\tparseInt(e.target.value) : e.target.value\n\t\tfilter[e.target.name] = v\n\t\tthis.setState({\"filters\": filter, \"selectedNodes\": []})\n\t}\n\n\tupdateWindowDimensions = () => {\n\t\tconst w = document.documentElement.clientWidth\n\t\tconst h = document.documentElement.clientHeight\n\t\tthis.setState({\n\t\t\twidth: w, height: h, svgWidth: w, svgHeight: h - this.controlHeight\n\t\t})\n\t}\n\n\tshowClubInfo(){\n\t\tif (this.state.selectedNodes.length === 0){\n\t\t\treturn <div className={\"clubDetail hidden\"} />\n\t\t}\n\t\treturn <div className={\"clubDetail visible\"}>\n\t\t\t{this.showClubs()}\n\t\t\t{this.showGroup()}\n\t\t\t{this.showSimilarities()}\n\t\t</div>\n\t}\n\n    onStepEnter = ({element, data, direction}) => {\n\t\tconsole.log(data);\n\t    if (data){\n\t\t\tthis.setState(data)\n\t    }\n\t}\n\n\trender() {\n\t\treturn <div className=\"container\" id={\"start\"}>\n\t\t\t<div id={\"tooltip\"} />\n\t\t\t<ScrollyTelling\n\t\t\t\tenter={this.onStepEnter}\n\t\t\t\tnodes={this.props.data.nodes}\n\t\t\t\tlinks={this.props.data.links}\n\t\t\t/>\n\t\t\t<div className={\"graphic\"}>\n\t\t\t\t<svg\n\t\t\t\t\tref={this.ref}\n\t\t\t\t\twidth={this.state.svgWidth}\n\t\t\t\t\theight={this.state.svgHeight}\n\t\t\t\t/>\n\t\t\t\t{this.showClubInfo()}\n\t\t\t</div>\n        </div>\n\t}\n}\n\nexport default Container","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faSyncAlt, faMobileAlt} from \"@fortawesome/free-solid-svg-icons\"\nimport React from \"react\"\nimport './rotate.scss';\n\n\nfunction Rotate(){\n\treturn <div className=\"rotate\">\n\t\t<div className={\"center\"}>\n\t\t\t<h2>\n\t\t\t\tPlease turn your phone to landscape mode to properly view\n\t\t\t\tthis webpage.\n\t\t\t</h2>\n\t\t\t<FontAwesomeIcon icon={faMobileAlt}/>\n\t\t\t<FontAwesomeIcon icon={faSyncAlt} spin={true}/>\n\t\t\t<h2>\n\t\t\t\tThanks!\n\t\t\t</h2>\n\t\t</div>\n\t</div>\n}\n\nexport default Rotate","import React, {Component} from 'react'\nimport './sections.scss';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport Rotate from \"./Rotate\"\n\nclass Intro extends Component {\n\trender(){\n\t\tconst content = <>\n\t\t\t<h1 className=\"center\">\n\t\t\t\tClubster Analysis\n\t\t\t</h1>\n\t\t\t<h3>\n\t\t\t\t Comparing the bookings at the worlds most popular nightclubs\n\t\t\t</h3>\n\t\t\t<p>\n\t\t\t\tHow similar or different are the line ups of the most popular nightclubs in the world?\n\t\t\t\tWhich clubs rely on residents and which have djs rotate through?\n\t\t\t\tHow different are the super clubs from the more underground fare?\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tIn an attempt to answer these questions and others like them we looked\n\t\t\t\tat the most recommended clubs for the most popular regions on the\n\t\t\t\treputable website <a href=\"https://www.residentadvisor.net/events\">Resident Advisor (RA)</a>.\n\t\t\t\tWe gathered all their listings for 2019 and then compared\n\t\t\t\tthe clubs based on djs and artists that played there that year.\n\t\t\t\tTake a look to see how your favourite club fits in.\n\t\t\t</p>\n\t\t\t<h3>\n\t\t\t\tScroll down to get started!\n\t\t\t</h3>\n\t\t\t<div className={'scrollDown center'}>\n\t\t\t\t<a href=\"#start\">\n\t\t\t\t\t<FontAwesomeIcon icon={faChevronDown} />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</>\n\t\treturn <Section content={content} intro={true}/>\n\t}\n}\n\nclass Outro extends Component {\n\trender (){\n\t\tconst content = <>\n\t\t\t<p>\n\t\t\t\tThat concludes this analysis of the bookings and line ups for\n\t\t\t\tthe most recommended clubs in the most popular regions on Resident\n\t\t\t\tAdvisor. I hope it has provided insight into how these clubs are\n\t\t\t\talike and different and given you a glimpse of how the world of\n\t\t\t\telectronic dance music worked in 2019.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe data was retrieved in April to May 2020.\n\t\t\t\tIf you'd like to learn more you can view all the <a href=\"https://github.com/Kalli/clubster-analysis\">code</a> for\n\t\t\t\tretrieving and visualising this data. If you have any questions\n\t\t\t\tyou can reach me on <a href=\"https://twitter.com/karltryggvason\">twitter</a> or\n\t\t\t\tthrough <a href=\"mailto:ktryggvason@gmail.com\">email</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tA <a href=\"https://lazilyevaluated.co/\">Lazily Evaluated</a> production.\n\t\t\t\tBy <a href=\"https://karltryggvason.com/\">Karl Tryggvason</a> and <a href=\"https://soundcloud.com/moffandtarkin\">Magnús Felix Tryggvason</a>\n\t\t\t</p>\n\t\t</>\n\t\treturn <Section content={content} intro={false} />\n\t}\n}\n\nclass Section extends Component {\n\trender(){\n\t\tconst contentClass = \"sectionsContent \" + (\n\t\t\t!this.props.intro? \"bottom\" : \"\"\n\t\t)\n\t\treturn <div className={\"sections\"}>\n\t\t\t<div className={ this.props.intro? \"top\" : \"\"} />\n\t\t\t<Rotate />\n\t\t\t<div className={contentClass}>\n\t\t\t\t<div className=\"jumbotron\">\n\t\t\t\t\t{this.props.content}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t}\n}\n\nexport {Intro, Outro}","import React, {Component} from 'react'\nimport './navbar.scss'\n\n\nclass Navbar extends Component {\n\trender() {\n\t\treturn <nav className=\"navbar\" id={'nav'}>\n\t\t\t<h1 className=\"center\">\n\t\t\t\t<a href=\"http://lazilyevaluated.co/\">\n\t\t\t\tLazily Evaluated\n\t\t\t\t</a>\n\t\t\t</h1>\n\t\t</nav>\n\t}\n}\n\nexport default Navbar","import React, {Component} from 'react';\nimport Container from './Container'\nimport {Intro, Outro} from './Sections'\nimport Navbar from './navbar'\n\nclass App extends Component {\n\n\tconstructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n\t        data: {}\n        }\n    }\n\n    loadData() {\n        fetch(`${process.env.PUBLIC_URL}/network-2019.json`)\n            .then( (response) => {\n                return response.json()\n            })\n            .then( (data) => {\n            \t// change arrays into objects\n\t            data.nodes = data.nodes.map(e =>{\n\t            \treturn e.reduce((acc, e, i) => {\n\t            \t\tacc[data.node_keys[i]] = e\n\t            \t\treturn acc\n\t\t            }, {})\n\t            })\n\t            data.links = data.links.map(e =>{\n\t            \treturn e.reduce((acc, e, i) => {\n\t            \t\tacc[data.link_keys[i]] = e\n\t            \t\treturn acc\n\t\t            }, {})\n\t            })\n            \tthis.setState({\n\t\t            loading: false,\n\t\t            data: data,\n            \t})\n            });\n    }\n\n\tcomponentDidMount() {\n        this.setState({\n\t        loading: true,\n            data: this.loadData()\n        })\n    }\n\n    render(){\n\t    const container = this.state.loading? '' : <Container\n\t\t    data={this.state.data}\n\t    />\n        return (\n            <>\n\t            <Navbar />\n\t            {<Intro />}\n                {container}\n\t            {<Outro />}\n            </>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}