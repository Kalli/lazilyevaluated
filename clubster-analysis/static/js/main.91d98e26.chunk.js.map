{"version":3,"sources":["steps.md","BarChart.js","lib.js","ScrollyTelling.js","charts/Chart.js","charts/BeeSwarmChart.js","charts/CandleStickChart.js","textHandling.js","charts/ClusterChart.js","charts/ChartWrapper.js","Container.js","Rotate.js","Sections.js","navbar.js","App.js","index.js"],"names":["module","exports","BarChart","props","createGraph","data","w","h","color","margin","width","height","svg","select","ref","current","attr","x","scaleBand","domain","range","length","padding","y","scaleLinear","max","map","e","append","selectAll","join","d","i","bandwidth","call","g","axisBottom","tickFormat","tickSizeOuter","style","axisLeft","ticks","remove","text","React","createRef","this","Component","fillColor","category","categories","interpolateWarm","indexOf","factorial","n","ScrollyTelling","stepsData","draw","filters","region","selectedNodes","chartType","country","state","steps","links","reduce","acc","weight","source","target","nodes","filter","includes","club_id","clubCount","averageWeight","combinations","Math","floor","averageResidency","number_of_unique_artists","total_number_of_artists","toFixed","fetch","then","response","html","marked","Object","keys","forEach","k","replace","split","setState","stepHtml","className","dangerouslySetInnerHTML","__html","step","key","onStepEnter","enter","offset","Chart","initial","left","right","top","bottom","legend","active","t","transition","duration","node","BeeSwarmChart","group","drawGraph","clickHandler","filterNodes","calculateInitialPositions","id","exit","newNode","radius","merge","highlightSelected","stepBand","yScale","random","xScale","number_of_dates","groups","Set","createLegend","yOffset","translate","axis","tickValues","concat","labelOffset","CandleStickChart","candleStickData","groupBy","push","sort","a","b","ceil","min","count","exitPrevChart","on","click","tooltip","tooltipData","detail","event","pageX","pageY","Array","from","bw","each","agg","mean","drawBox","percentile_5","percentile_95","drawWhiskers","drawMean","addLabel","start","rows","club","CHAR_W","A","B","C","c","D","E","F","f","G","H","I","J","j","K","L","l","M","m","N","O","o","P","p","Q","q","R","r","S","s","T","U","u","V","v","W","X","Y","Z","z","fitTextToScreen","fittedText","ClusterChart","decay","timer","elapsed","dt","simulation","force","strength","pow","stop","cluster","zoom","zoomGroup","transform","drag","dragstarted","dragged","dragended","calculateRadius","alphaTarget","restart","setTimeout","tick","groupCount","clusters","angle","PI","cos","sin","alpha","sqrt","initialize","_","fx","fy","forceSimulation","forceCenter","forceX","forceY","forceCollide","zoomHandler","scaleExtent","type","nodeName","sizes","radiuses","followers","log","ChartWrapper","ChartType","chart","newChart","Container","controlHeight","onNodeClick","index","splice","slice","setFilters","value","updateWindowDimensions","document","documentElement","clientWidth","clientHeight","svgWidth","svgHeight","setAsyncState","newState","Promise","resolve","element","direction","window","removeEventListener","addEventListener","chartWrapper","header","entries","artists","artistLink","clubButton","parentClub","clubId","percentage","onClick","clubButtonClickHandler","find","selectedClubs","artistName","artist_names_to_ids","artistId","toLowerCase","href","rel","union","ids","overlap","prevProps","prevState","every","setChartType","clubs","showClub","createClubTable","imgPath","process","img","logo","src","alt","link","icon","faTimesCircle","backgroundColor","attending","tableRows","createTable","mostCommonArtists","mostSimilarClubs","groupClubs","stats","selectedRegion","selectedCountry","countries","regions","options","name","placeholder","onChange","renderOption","search","searchSelect","domProps","option","snapshot","selected","faCheck","selectedId","showClubs","showGroup","showSimilarities","controls","showClubInfo","Rotate","faMobileAlt","faSyncAlt","spin","Intro","content","faChevronDown","intro","Outro","Section","contentClass","Navbar","App","loading","json","node_keys","link_keys","loadData","container","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91d98e26.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/steps.699ddab4.md\";","import React, {Component} from 'react'\nimport {select} from 'd3-selection'\nimport {scaleBand, scaleLinear} from 'd3-scale'\nimport {axisLeft, axisBottom} from 'd3-axis'\nimport {range, max} from 'd3-array'\n\n\nclass BarChart extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.ref = React.createRef()\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {data, width, height, color} = this.props\n\t\tthis.createGraph(data, width, height, color)\n\t}\n\n\tcreateGraph = (data, w, h, color) => {\n\t\tvar margin = {top: 10, right: 0, bottom: 70, left: 40}\n\t    const width = w - margin.left - margin.right\n\t    const height = h - margin.top - margin.bottom\n\n\t\tconst svg = select(this.ref.current).attr(\"viewBox\", [0, 0, w, h])\n\n\t\tconst x = scaleBand()\n\t\t\t.domain(range(data.length))\n\t\t\t.range([margin.left, width - margin.right])\n            .padding(0.1)\n\n\t\tconst y = scaleLinear()\n\t\t\t.domain([0, max(data.map(e=>[e[1]]))])\n\t\t\t.range([height, margin.top])\n\n\t\tconst xAxis = g => g\n\t\t    .attr(\"transform\", `translate(0,${h - margin.bottom - margin.top})`)\n            .call(\n            \taxisBottom(x).tickFormat(i => data[i][0]).tickSizeOuter(0)\n            ).selectAll(\"text\")\n\t\t     .style(\"text-anchor\", \"end\")\n\t\t     .attr(\"dx\", \"-.8em\")\n\t\t     .attr(\"dy\", \".15em\")\n\t\t     .attr(\"transform\", \"rotate(-65)\")\n\n\t\tconst yAxis = g => g\n\t\t    .attr(\"transform\", `translate(${margin.left},0)`)\n\t\t    .call(axisLeft(y).ticks(5))\n\t\t    .call(g => g.select(\".domain\").remove())\n\t\t    .call(g => g.append(\"text\")\n\t\t        .attr(\"x\", -margin.left)\n\t\t        .attr(\"y\", 10)\n\t\t        .attr(\"fill\", \"currentColor\")\n\t\t        .attr(\"text-anchor\", \"start\")\n\t\t        .text(data.y))\n\n\t\tsvg\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"fill\", color)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(data)\n\t\t\t.join(\"rect\")\n\t\t\t\t.attr(\"x\", (d, i) => x(i))\n\t\t\t\t.attr(\"y\", d => y(d[1]))\n\t\t\t\t.attr(\"height\", d =>  y(0) - y(d[1]))\n\t\t\t\t.attr(\"width\", x.bandwidth())\n\n\t\tsvg.append(\"g\").call(xAxis)\n\t\tsvg.append(\"g\").call(yAxis)\n\t}\n\n\trender() {\n\t\treturn <svg ref={this.ref}\n\t\t     width={this.props.width}\n\t\t     height={this.props.height}\n\t\t/>\n\t}\n}\n\nexport default BarChart","import {interpolateWarm} from 'd3-scale-chromatic'\nimport React from \"react\"\n\nfunction fillColor(category, categories){\n\treturn interpolateWarm(\n\t\tcategories.indexOf(category) / categories.length\n\t)\n}\n\nconst factorial = (n) => !(n > 1) ? 1 : factorial(n - 1) * n;\n\n\nfunction artistLink(artistName, artist_names_to_ids){\n\tconst artistId = ( artist_names_to_ids[artistName] ||\n\t\t\tartistName.toLowerCase().replace(' ', '')\n\t)\n\treturn <a\n\t\thref={'https://www.residentadvisor.net/dj/' + artistId}\n\t\trel={'noopener noreferrer'}\n\t\ttarget={'_blank'}\n\t>\n\t\t{artistName}\n\t</a>\n}\n\nexport {fillColor, factorial, artistLink}\n","import React, {Component} from \"react\"\nimport {Scrollama, Step} from \"react-scrollama\"\nimport marked from \"marked\"\nimport steps from \"./steps.md\"\nimport \"./ScrollyTelling.scss\"\nimport {factorial} from \"./lib\"\n\n\nclass ScrollyTelling extends Component {\n\n\tstepsData = [\n\t\t{draw: true, filters: {region: \"all\"}, selectedNodes: []},\n\t\t{filters: {region: \"Berlin\"}, chartType: \"Cluster\", selectedNodes: []},\n\t\t{filters: {country: \"all\"}, chartType: \"Cluster\", selectedNodes: [] },\n\t\t{filters: {region: \"all\"}, chartType: \"BeeSwarm\", selectedNodes: []},\n\t\t{filters: {region: \"all\"}, chartType: \"BeeSwarm\", selectedNodes: []},\n\t\t{filters: {region: \"all\"}, chartType: \"CandleStick\", selectedNodes: []},\n\t]\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tsteps: null,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// fetch the markdown and replace any variables\n\t\tconst {source, target, weight} = this.props.links.reduce((acc, e)=>{\n\t\t\treturn acc.weight > e.weight? acc : e\n\t\t}, {weight: 0})\n\n\t\t// Show De School and Berghain in step 3\n\t\tthis.stepsData[2].selectedNodes = this.props.nodes.filter((e) => {\n\t\t\treturn [112491, 5031].includes(e.club_id)\n\t\t})\n\t\tconst clubCount = this.props.nodes.length\n\t\tconst total = this.props.links.reduce((acc, e) => acc+e.weight, 0)\n\t\tconst averageWeight = total / this.props.links.length\n\t\tconst combinations = Math.floor(\n\t\t\tfactorial(clubCount) / (2 * factorial(clubCount - 2))\n\t\t)\n\n\t\tconst averageResidency = (this.props.nodes.reduce((acc, e) => {\n\t\t\tif (e.number_of_unique_artists !== 0){\n\t\t\t\treturn acc + e.total_number_of_artists / e.number_of_unique_artists\n\t\t\t}\n\t\t\treturn acc\n\t\t}, 0) / clubCount).toFixed(2)\n\n\t\tconst data = {\n\t\t\t\"$clubCount\": clubCount,\n\t\t\t\"$linkCount\": this.props.links.length,\n\t\t\t\"$source\": source,\n\t\t\t\"$target\": target,\n\t\t\t\"$weight\": (weight*100).toFixed(0),\n\t\t\t\"$combinations\": combinations,\n\t\t\t\"$averageWeight\": (averageWeight*100).toFixed(0.2),\n\t\t\t\"$averageResidency\": averageResidency,\n\t\t}\n\n\t\tfetch(steps)\n\t\t\t.then(response => {\n\t\t\t\treturn response.text()\n\t\t\t})\n\t\t\t.then(text => {\n\t\t\t\tlet html = marked(text)\n\t\t\t\tObject.keys(data).forEach(k => html = html.replace(k, data[k]))\n\t\t\t\tconst steps = html.split('<hr>')\n\t\t\t\tthis.setState({steps: steps})\n\t\t\t})\n\t}\n\n\tstep(stepHtml) {\n\t\treturn <div className={\"step \"}>\n\t\t\t<div dangerouslySetInnerHTML={{__html: stepHtml}} />\n\t\t</div>\n\t}\n\n\trender() {\n\n\t\tif (!this.state.steps){\n\t\t\treturn \"\"\n\t\t}\n\n\t\tconst steps = this.state.steps.map((step, i) => {\n\t\t\treturn <Step key={i} data={this.stepsData[i]}>\n\t\t\t\t{this.step(step)}\n\t\t\t</Step>\n\t\t})\n\t\treturn <div className={\"scroller\"}>\n\t\t\t<Scrollama\n\t\t\t\tonStepEnter={this.props.enter}\n\t\t\t\toffset={0.75}\n\t\t\t>\n\t\t\t\t{steps}\n\t\t\t</Scrollama>\n\t\t</div>\n\t}\n}\n\nexport default ScrollyTelling","import {select, selectAll} from 'd3-selection'\nimport {transition} from 'd3-transition'\n\n// Common chart functionality\nclass Chart{\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tthis.svg = svg\n\t\tthis.initial = true\n\t\tthis.margin = margin\n\t\tthis.categories = categories\n\t\tthis.width = w - this.margin.left - this.margin.right\n\t    this.height = h - this.margin.top - this.margin.bottom\n\t\tthis.legend = null\n\t\tthis.active = true\n\t\tthis.t = transition().duration(1500)\n\t}\n\n\tcreateGraph(nodes){\n\t\tif (!this.g) {\n\t\t\tthis.g = select(this.svg)\n\t\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"class\", \"graph\")\n\t\t\tthis.node = this.g.selectAll(\"circle\")\n\t\t}\n\t\tthis.g.transition(1000).attr(\"transform\", \"translate(0, 0), scale(1)\")\n\t}\n\n\thighlightSelected(selectedNodes){\n\t\t// highlight selected nodes if any\n\t\tthis.g\n\t\t\t.selectAll(\".nodes\")\n\t\t\t.style(\"opacity\", (d)=>{\n\t\t\t\treturn selectedNodes.includes(d)? 0.6 : 1\n\t\t\t})\n\t\tthis.g\n\t\t\t.selectAll(\".label\")\n\t\t\t.attr(\"text-decoration\", (d)=>{\n\t\t\t\treturn selectedNodes.includes(d)? \"underline\" : \"\"\n\t\t\t})\n\t}\n\n\texit(){\n\t\tthis.active = false\n\t\tselectAll(\".legend\").transition(2500).style(\"opacity\", 0).remove()\n\t}\n}\n\nexport {Chart}","import {select} from 'd3-selection'\nimport {scaleLinear, scaleBand} from 'd3-scale'\nimport {max} from 'd3-array'\nimport {axisBottom} from 'd3-axis'\nimport './Chart.scss'\nimport {Chart} from \"./Chart\"\nimport {fillColor} from \"../lib\"\n\nclass BeeSwarmChart extends Chart{\n\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tsuper(svg, margin, categories, h, w)\n\t\tthis.groups = []\n\t\tthis.radius = 15\n\t}\n\n\ty = e => e.group\n\n\tx = e => {\n\t\treturn e.number_of_unique_artists !== 0?\n\t\t\te.total_number_of_artists / e.number_of_unique_artists : 0\n    }\n\n\tcreateGraph(nodes){\n\t\tsuper.createGraph(nodes)\n\n\t\t// filter out 0 attributes from nodes\n\t\tthis.filterNodes(nodes)\n\n\t\t// how many bands do we have on the y axis\n\t\tthis.groups = [...new Set(this.nodes.map(e => this.y(e)))]\n\n        this.xScale = scaleLinear()\n            .domain([1, max(this.nodes, d => this.x(d))])\n            .range([\n            \tthis.margin.left,\n\t            this.width - this.margin.right - this.margin.left\n            ])\n\n        this.yScale = scaleBand()\n            .domain(this.groups)\n            .range([\n            \tthis.margin.top,\n\t            this.height + this.margin.top - this.margin.bottom\n            ])\n\t\tthis.createLegend()\n\t\t// resize all nodes\n\t\tthis.node.selectAll(\"circle\")\n\t\t\t.transition(this.t)\n\t\t\t.attr(\"r\", this.radius)\n\n\t\t// and hide labels\n\t\tthis.node.selectAll(\"text\")\n\t\t\t.transition(this.t)\n\t\t\t.style(\"opacity\", \"0\")\n\t\t\t.style(\"display\", \"none\")\n\t\t\t.text(d => d.id + \" - \" + this.x(d).toFixed(2))\n\t}\n\n\tdrawGraph = (nodes, clickHandler, selectedNodes) => {\n\n\t\tthis.filterNodes(nodes)\n\t\tif (this.initial){\n\t\t\tthis.calculateInitialPositions()\n\t\t}\n\n\t\tthis.node = this.node.data(this.nodes, d => d.id)\n\t\tthis.node.exit()\n\t\t\t.remove()\n\n\t\tlet newNode = this.node.enter()\n\t\t\t.append(\"g\")\n\n\t\tnewNode\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"r\", this.radius)\n\t\t\t.attr(\"fill\", d => fillColor(d.group, this.categories))\n\t\t\t.attr(\"class\", \"nodes\")\n\t\t\t.style(\"fill-opacity\", this.initial? 1: 0)\n\n\t\tnewNode\n\t\t\t.append(\"text\")\n\t\t\t.style(\"opacity\", \"0\")\n\t\t\t.style(\"display\", \"none\")\n\t\t\t.text(d => d.id + \" - \" + this.x(d).toFixed(2))\n\n\t\tthis.node = this.node.merge(newNode)\n\t    // if we are transitioning from another chart:\n\t\tif (this.initial){\n\t\t    this.node.transition(this.t)\n                .attr(\"transform\", d => \"translate(\"+d.x + \",\" + d.y+\")\")\n\t\t}\n\n\t\tthis.highlightSelected(selectedNodes)\n\t\tthis.initial = false\n\t}\n\n\tcalculateInitialPositions = () => {\n\t\t// Calculate positions\n\t\tconst stepBand = Math.floor(this.yScale.step()/this.radius)\n\t\tthis.nodes.forEach((e, i) => {\n\t\t\tconst offset = Math.floor(Math.random() * stepBand)\n\t        e.x  = this.xScale(this.x(e))\n            e.y = this.yScale(this.y(e)) + offset * this.radius\n\t\t})\n\t}\n\n\tfilterNodes = (nodes) => {\n\t\tconst minDates = 10\n\t\tconst minArtists = 20\n\t\tthis.nodes = nodes.filter(e =>{\n\t\t\treturn (\n\t\t\t\tthis.x(e) !== 0 &&\n\t\t\t\te.number_of_unique_artists > minArtists &&\n\t\t\t\te.number_of_dates > minDates\n\t\t\t)\n\t\t})\n\t}\n\n\tcreateLegend(){\n\t\tconst yOffset = this.height + this.margin.top - this.margin.bottom\n\t\tconst translate = `translate(0, ${yOffset})`\n\t\tthis.legend = select(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"legend\")\n\t\t\t.attr(\"transform\", translate)\n\t\tconst axis = axisBottom(this.xScale)\n\t\t\t.tickValues(this.xScale.ticks().concat(this.xScale.domain()))\n\t\tthis.legend.call(axis)\n\n\t\tconst labelOffset = `translate(0, ${this.margin.top + 20})`\n\t\tselect(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", labelOffset)\n\t\t\t.attr(\"class\", \"label legend\")\n\t\t\t.append('text')\n\t\t    .text(\"Average number of bookings per artist by club in 2019\");\n\t}\n}\n\nexport {BeeSwarmChart}","import {select, event} from 'd3-selection'\nimport {scaleLinear, scaleBand} from 'd3-scale'\nimport {max} from 'd3-array'\nimport {axisBottom} from 'd3-axis'\nimport './Chart.scss'\nimport {Chart} from \"./Chart\"\n\n\nclass CandleStickChart extends Chart{\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tsuper(svg, margin, categories, h, w)\n\t\tthis.groups = []\n\t\tthis.tooltipData = null\n\t}\n\n\ty = e => {\n\t\treturn this.groups.indexOf(e)\n\t}\n\n\tx = e => {\n\t\treturn e.number_of_unique_artists !== 0?\n\t\t\te.total_number_of_artists / e.number_of_unique_artists : 0\n    }\n\n    candleStickData = () => {\n\t\tconst groups = this.nodes.reduce((acc, e) => {\n\t\t\tconst key = e[this.groupBy]\n\t\t\tacc[key] ? acc[key].push(e) : acc[key] = [e]\n\t\t\treturn acc\n\t\t}, {})\n\t    return Object.keys(groups).reduce((acc, key) => {\n\t    \tconst nodes = groups[key].sort((a, b) => this.x(b) - this.x(a))\n\t\t    const d = nodes.map(e => this.x(e)).sort()\n\t\t    acc.push({\n\t\t\t    'percentile_95': d[Math.floor(0.95*d.length)-1],\n\t\t\t    'percentile_5': d[Math.ceil(0.05*d.length)],\n\t\t\t\t'mean': d.reduce((acc, e) => acc + e, 0) / d.length,\n\t\t\t    'max': Math.max(...d),\n\t\t\t    'min': Math.min(...d),\n\t\t\t    'count': d.length,\n\t\t\t    'id': key,\n\t\t\t    'nodes': nodes\n\t\t    })\n\t    \treturn acc\n\t    }, []).filter((e) => e.count > 1)\n\t}\n\n\tcreateGraph(nodes){\n\t\tsuper.createGraph(nodes)\n\t\tthis.groupBy = 'region'\n\n\t\t// filter out 0 attributes from nodes\n\t\tthis.filterNodes(nodes)\n\t\tthis.data = this.candleStickData()\n\t\t// how many bands do we have on the y axis\n\t\tthis.groups = [...new Set(this.data.map(e => e.id))]\n\n        this.xScale = scaleLinear()\n            .domain([1, max(this.nodes, d => this.x(d))])\n            .range([\n            \tthis.margin.left,\n\t            this.width - this.margin.right - this.margin.left\n            ])\n\n        this.yScale = scaleBand()\n            .domain(Array.from(Array(this.groups.length).keys()))\n            .range([\n            \tthis.margin.top,\n\t            this.height + this.margin.top - this.margin.bottom\n            ])\n\t\tthis.createLegend()\n\t\tthis.bw = this.yScale.bandwidth();\n\t}\n\n\texitPrevChart(){\n\t\tlet n = 0\n\t\tthis.node.exit()\n\t\t\t.each(() => n++)\n\t\t\t.attr(\"class\", \"candlestick\")\n\t\t\t.transition(\"exit\").duration(2000)\n            .attr(\"transform\", d => {\n            \tconst agg = this.data.filter(e => e.id === d[this.groupBy])[0]\n\t            const x = agg? this.xScale(agg.mean) : 0\n            \tconst y = this.yScale(this.y(d.region)) + this.bw / 2\n\t            if (x === 0){\n\t            \treturn \"scale(0, 0)\"\n\t            }\n            \treturn \"translate(\"+ x + \",\" + (y? y : 0) +\")\"\n            })\n\t\t\t.on('end', () => {\n\t\t\t\tn--\n\t\t\t\tif (n === 0){\n\t\t\t\t\tthis.drawBox()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.transition().duration(2000)\n\t\t\t.remove()\n\t}\n\n\tdrawBox(){\n\t\tlet n = 0\n\n\t\tthis.newNode\n\t\t\t.each(() => n++)\n\t\t\t.append(\"rect\")\n\t\t\t.attr(\"height\", 0)\n\t\t\t.attr(\"width\", 0)\n\t        .attr(\"class\", \"fill\")\n\t\t\t.attr(\"x\", d => this.xScale(d.mean))\n\t\t\t.attr(\"rx\", 15)\n\t\t\t.attr(\"y\", d => this.yScale(this.y(d.id)) + this.bw / 2)\n\t\t\t.attr(\"ry\", 15)\n\t\t\t.transition(\"drawbox\").duration(1000)\n\t\t\t.attr(\"height\", this.bw)\n\t\t\t\t.attr(\"x\", d => this.xScale(d.percentile_5))\n\t\t\t\t.attr(\"y\", d => this.yScale(this.y(d.id)))\n\t\t\t\t.attr('width', d => {\n\t\t\t\t\tconst start = this.xScale(d.percentile_95)\n\t\t\t\t\tconst end = this.xScale(d.percentile_5)\n\t\t\t\t\treturn start - end\n\t\t\t\t})\n\t\t\t\t.on(\"end\", () => {\n\t\t\t\t\tn--\n\t\t\t\t\tif (n === 0){\n\t\t\t\t\t\tthis.drawWhiskers()\n\t\t\t\t\t\tthis.drawMean()\n\t\t\t\t\t\tthis.addLabel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t}\n\n\tdrawWhiskers(){\n\t\tconst offset = this.bw / 2\n\t\tthis.newNode\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", d => this.xScale(d.percentile_5))\n\t\t\t.attr(\"x2\", d => this.xScale(d.percentile_5))\n\t\t\t.attr(\"y1\", d => this.yScale(this.y(d.id)) + offset)\n\t\t\t.attr(\"y2\", d => this.yScale(this.y(d.id)) + offset)\n\t        .attr(\"class\", \"line\")\n\t\t\t.transition(\"drawWhiskers1\").duration(1000)\n\t\t\t\t.attr(\"x2\", d => this.xScale(d.min))\n\n\t\tthis.newNode\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", d => this.xScale(d.percentile_95))\n\t\t\t.attr(\"x2\", d => this.xScale(d.percentile_95))\n\t\t\t.attr(\"y1\", d => this.yScale(this.y(d.id)) + offset)\n\t\t\t.attr(\"y2\", d => this.yScale(this.y(d.id)) + offset)\n\t        .attr(\"class\", \"line\")\n\t\t\t.transition(\"drawWhiskers2\").duration(1000)\n\t\t\t\t.attr(\"x2\", d => this.xScale(d.max))\n\n\t}\n\n\taddLabel(){\n\t\t// text\n\t\tthis.newNode\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"x\", d => {\n\t\t\t\tconst start = this.xScale(d.percentile_5)\n\t\t\t\tconst length = this.xScale(d.percentile_95) - start\n\t\t\t\treturn start + (length / 2)\n\t\t\t})\n\t\t\t.attr(\"y\", d => this.yScale(this.y(d.id)) + this.bw/2)\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"class\", \"label\")\n\t\t\t.style(\"fill\", \"#fff\")\n            .style(\"font-size\", 12)\n            .text(d => `${d.id} (${d.count})`)\n\t}\n\n\tdrawMean(){\n\t\t// mean\n\t\tthis.newNode\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", d => this.xScale(d.mean))\n\t\t\t.attr(\"x2\", d => this.xScale(d.mean))\n\t\t\t.attr(\"y1\", d => this.yScale(this.y(d.id)))\n\t\t\t.attr(\"y2\", d => this.yScale(this.y(d.id)) + this.bw)\n\t        .attr(\"class\", \"mean\")\n\t}\n\n\tdrawGraph = (nodes, clickHandler, selectedNodes) => {\n\t\tthis.filterNodes(nodes)\n\n\t\tthis.node = this.node.data(this.data, d=> d.id)\n\n\t\tthis.newNode = this.node.enter()\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"candlestick\")\n\n\t\tthis.exitPrevChart()\n\n\t\tthis.newNode.on(\"click\", d => this.click(d))\n\t\tthis.tooltip = select(\"#tooltip\")\n\n\t\tthis.node = this.node.merge(this.newNode)\n\t\tthis.initial = false\n\t}\n\n\tclick = (d) => {\n\t\tif(this.tooltipData !== d){\n\t\t    this.tooltip.transition().duration(200).style(\"opacity\", 1)\n\t\t\tthis.tooltip.html(this.detail(d))\n\t\t         .style(\"left\", (event.pageX) + \"px\")\n\t\t         .style(\"top\", (event.pageY - 28) + \"px\")\n\t\t\tthis.tooltipData = d\n\t\t}else{\n\t\t    this.tooltip.transition().duration(500).style(\"opacity\", 0)\n\t\t\tthis.tooltipData = null\n\t\t}\n\t}\n\n\tfilterNodes = (nodes) => {\n\t\tconst minDates = 10\n\t\tconst minArtists = 20\n\t\tthis.nodes = nodes.filter(e =>{\n\t\t\treturn (\n\t\t\t\tthis.x(e) !== 0 &&\n\t\t\t\te.number_of_unique_artists > minArtists &&\n\t\t\t\te.number_of_dates > minDates\n\t\t\t)\n\t\t})\n\t}\n\n\tcreateLegend(){\n\t\tconst yOffset = this.height + this.margin.top - this.margin.bottom\n\t\tconst translate = `translate(0, ${yOffset})`\n\t\tthis.legend = select(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"legend\")\n\t\t\t.attr(\"transform\", translate)\n\t\tconst axis = axisBottom(this.xScale)\n\t\t\t.tickValues(this.xScale.ticks().concat(this.xScale.domain()))\n\t\tthis.legend.call(axis)\n\n\t\tconst labelOffset = `translate(0, ${this.margin.top + 20})`\n\t\tselect(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", labelOffset)\n\t\t\t.attr(\"class\", \"label legend\")\n\t\t\t.append('text')\n\t\t    .text(\"Average number of bookings per artist by region in 2019\")\n\t}\n\n\tdetail(data){\n\t\tconst rows = data.nodes.map(club => {\n\t\t\treturn `<tr>\n\t\t\t\t<td>${club.id}</td>\n\t\t\t\t<td>\n\t\t\t\t\t${(\n\t\t\t\t\t\tclub.total_number_of_artists / club.number_of_unique_artists\n\t\t\t\t\t).toFixed(1)}\n\t\t\t\t</td>\n\t\t\t</tr>`\n\t\t})\n\t\treturn `<h2 class=\"center\">${data.id}</h2>\n\t\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Club Name</th>\n\t\t\t\t\t<th>Average bookings per artist</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t${rows.join(\"\")}\n\t\t\t</tbody>\n\t\t</table>`\n\t}\n}\n\nexport {CandleStickChart}","// taken from: https://observablehq.com/@gka/cheap-fit-text-to-circle\nconst CHAR_W = {\n\tA:7,a:7,B:8,b:7,C:8,c:6,D:9,d:7,E:7,e:7,F:7,f:4,G:9,g:7,H:9,h:7,I:3,i:3,\n\tJ:5,j:3,K:8,k:6,L:7,l:3,M:11,m:11,N:9,n:7,O:9,o:7,P:8,p:7,Q:9,q:7,R:8,\n\tr:4,S:8,s:6,T:7,t:4,U:9,u:7,V:7,v:6,W:11,w:9,X:7,x:6,Y:7,y:6,Z:7,z:5,\n\t'.':2,',':2,':':2,';':2\n}\n\nfunction fitTextToScreen(text, radius){\n\tconst fittedText = text.split(\"\").reduce((acc, e) => {\n\t\tif (acc.length < 1.6 * radius){\n\t\t\tacc.length = acc.length + (CHAR_W[e] || CHAR_W.a)\n\t\t\tacc.text = acc.text + e\n\t\t}\n\t\treturn acc\n\t}, {length: 0, text: ''}).text\n\tif (fittedText === text){\n\t\treturn text\n\t}\n\treturn fittedText + \"...\"\n}\n\nexport {fitTextToScreen}","import {forceSimulation, forceCenter, forceX, forceY} from \"d3-force\"\nimport {forceCollide} from \"d3-force\"\nimport {select, event} from 'd3-selection'\nimport {drag} from 'd3-drag'\nimport {zoom} from \"d3-zoom\"\nimport {timer} from \"d3-timer\"\nimport {fitTextToScreen} from \"../textHandling\"\nimport {fillColor} from \"../lib\"\nimport './Chart.scss'\nimport {Chart} from \"./Chart\"\n\n\nclass ClusterChart extends Chart{\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tsuper(svg, margin, categories, h, w)\n\t\tthis.clusters = {}\n\t}\n\n\tcreateGraph(nodes){\n\t\tsuper.createGraph(nodes)\n\t\tconst padding = 1\n\n\t\tthis.simulation = forceSimulation()\n\t\t\t.force('center', forceCenter(this.width/2, this.height/2))\n\t\t\t.force('x', forceX(this.width / 2).strength(0.01))\n\t\t\t.force('y', forceY(this.height / 2).strength(0.01))\n\t\t\t.force('cluster', this.cluster().strength(0.5))\n\t\t\t.force('collide', forceCollide(d => d.radius + padding))\n\n\t\tthis.zoomHandler = zoom()\n\t\t\t.scaleExtent([1, 1])\n\t\t\t.filter(() => {\n\t\t\t\treturn event.type !== \"wheel\" || event.target.nodeName !== \"svg\"\n\t\t\t})\n\t\t\t.on(\"zoom\", () => this.zoom(this.g))\n\t\tselect(this.svg).call(this.zoomHandler)\n\n\t\tthis.decay()\n\t\tthis.createLegend()\n\t\t// resize all nodes if we were coming from a different graph\n\t\tthis.node.selectAll(\"circle\")\n\t\t\t.transition(this.t)\n\t\t\t.attr(\"r\", d => this.calculateRadius(d))\n\n\t\t// and show labels\n\t\tthis.node.selectAll(\"text\")\n\t\t\t.transition(this.t)\n\t\t\t.style(\"opacity\", \"1\")\n\t\t\t.style(\"display\", \"block\")\n\t\t\t.text(d => fitTextToScreen(d.id, d.radius))\n\t}\n\n\tdecay = () => {\n\t\tconst transitionTime = 3000\n\t\tconst t = timer((elapsed) => {\n\t        var dt = elapsed / transitionTime\n\t\t    this.simulation\n\t\t\t    .force('collide')\n\t\t\t    .strength(Math.pow(dt, 2))\n\t\t    if (dt >= 1.0){\n\t\t        t.stop()\n\t\t\t    // disable forces for less jitter\n\t\t\t    this.simulation.force(\"x\", null)\n\t\t\t    this.simulation.force(\"y\", null)\n\t\t\t    this.simulation.force(\"center\", null)\n                this.simulation.force('cluster', this.cluster().strength(0.1))\n\t\t    }\n\t\t})\n\t}\n\n\tzoom = (zoomGroup) => {\n\t\tif (!this.active) return\n\t\tzoomGroup.attr(\"transform\", event.transform)\n\t}\n\n\tdrawGraph = (nodes, clickHandler, selectedNodes) => {\n\t\t// prevent nodes from jumping on filter operations\n\t\tif (!this.initial){\n\t\t\tthis.simulation.stop()\n\t\t}\n\t\t// todo this mutates and is ugly\n\t\tif (this.initial){\n\t\t\tthis.calculateInitialPositions(nodes)\n\t\t}\n\n\t\tthis.node = this.node.data(nodes, d=> d.id)\n\t\tthis.node.exit()\n\t\t\t.transition().duration(2000)\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.remove()\n\n\t\tlet newNode = this.node.enter()\n\t\t\t.append(\"g\")\n\t\t\t.on(\"click\", d => clickHandler(d))\n\t\t\t.call(drag()\n\t\t\t\t\t.on(\"start\", d => this.dragstarted(d, this.simulation))\n\t\t\t\t\t.on(\"drag\", d => this.dragged(d))\n\t\t\t\t\t.on(\"end\", d => this.dragended(d, this.simulation))\n\t\t\t)\n\n\n\t\tnewNode\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"r\", d => this.calculateRadius(d))\n\t\t\t.attr(\"fill\", d => fillColor(d.group, this.categories))\n\t\t\t.attr(\"class\", \"nodes\")\n\t\t\t.style(\"fill-opacity\", this.initial? 1: 0)\n\t\t\t.transition().duration(2000).style(\"fill-opacity\", 1)\n\n\t\tnewNode\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"class\", \"label\")\n\t\t\t.style(\"fill\", \"#fff\")\n\t\t\t.style(\"opacity\", 0)\n            .style(\"font-size\", 12)\n\t\t\t.text(d => fitTextToScreen(d.id, d.radius))\n\t\t\t.transition().duration(2000).style(\"opacity\", 1)\n\n\t\tthis.node = this.node.merge(newNode)\n\n\t\tif (!this.initial){\n\t\t\t// restart simulation so nodes wont get stuck on next filter\n\t\t\tthis.simulation.alphaTarget(0.3).restart()\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.simulation.alphaTarget(0)\n\t\t\t}, 100)\n\t\t\tthis.decay()\n\t\t}\n\t\tthis.highlightSelected(selectedNodes)\n\n\t\tthis.simulation\n\t\t\t.on('tick', this.tick)\n\t\t\t.nodes(nodes)\n\t\tthis.initial = false\n\t}\n\n\tcalculateInitialPositions = (nodes) => {\n\t\tconst radius = Math.min(this.width, this.height) / 2\n\t\tconst groupCount = Math.max(...nodes.map(e => e.group))\n\t\tthis.clusters = new Array(groupCount)\n\t\tnodes.forEach((e) => {\n\t\t\t// position along a circle, clustered by group\n\t\t\tconst g = e.group\n\t\t\tconst angle = g / groupCount * 2 * Math.PI\n\t        e.x  = Math.cos(angle) * radius + this.width / 2 + Math.random()\n            e.y = Math.sin(angle) * radius + this.height / 2 + Math.random()\n\n\t\t\t// set the radius of each node\n\t\t\tconst r = this.calculateRadius(e)\n\t\t\te.radius = r\n\n\t\t\tif (!this.clusters[g] || r > this.clusters[g]){\n\t\t\t\tthis.clusters[e.group] = e\n\t\t\t}\n\t\t})\n\t}\n\n\ttick = () => {\n\t\tthis.node\n\t\t\t.attr(\"transform\", d => \"translate(\"+d.x + \",\" + d.y+\")\")\n\t}\n\n\tcluster = () => {\n\t\t// adapted from\n\t\t// https://bl.ocks.org/ericsoco/38b4f8b51ecf116e6fb0727d25687e8e\n\t\tlet nodes,\n\t\t\tstrength = 0.1\n\n\t\tconst force = (alpha) => {\n\t\t\t// scale + curve alpha value\n\t\t\talpha *= strength * alpha\n\n\t\t\tnodes.forEach((d) => {\n\t\t\t\tlet cluster = this.clusters[d.group]\n\t\t\t\tif (cluster === d) return\n\t\t\t\tlet x = d.x - cluster.x,\n\t\t\t\t\ty = d.y - cluster.y,\n\t\t\t\t\tl = Math.sqrt(x * x + y * y),\n\t\t\t\t\tr = d.radius + cluster.radius\n\n\t\t\t\tif (l !== r) {\n\t\t\t\t\tl = (l - r) / l * alpha\n\t\t\t\t\td.x -= x *= l\n\t\t\t\t\td.y -= y *= l\n\t\t\t\t\tcluster.x += x\n\t\t\t\t\tcluster.y += y\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tforce.initialize = function (_) {\n\t\t\tnodes = _\n\t\t}\n\n\t\tforce.strength = _ => {\n\t\t\tstrength = _ == null ? strength : _\n\t\t\treturn force\n\t\t}\n\n\t\treturn force\n\t}\n\n\tdragstarted = (d, simulation) => {\n\t\tif (!this.active) return\n\t\tif (!event.active) simulation.alphaTarget(0.3).restart()\n\t\td.fx = d.x\n\t\td.fy = d.y\n\t}\n\n\tdragged = d => {\n\t\tif (!this.active) return\n\t\td.fx = event.x\n\t\td.fy = event.y\n\t}\n\n\tdragended = (d, simulation) => {\n\t\tif (!this.active) return\n\t\tif (!event.active) simulation.alphaTarget(0)\n\t\td.fx = null\n\t\td.fy = null\n\t}\n\n\tcreateLegend(){\n\t\tconst sizes = [10000, 1000, 100, 10]\n\t\tconst radiuses = sizes.map(e => {\n\t\t\treturn this.calculateRadius({followers: e})\n\t\t})\n\n\t\tconst x = 10\n\t\tconst lineHeight = 30\n\t\tconst y = this.height - 2 * Math.max(...radiuses)\n\n\t    this.legend = select(this.svg)\n\t        .append(\"g\")\n\t\t\t.attr(\"class\", \"legend\")\n\t        .attr(\"x\", x)\n\t        .attr(\"y\", y)\n\t        .attr(\"transform\", `translate(${x}, ${y})`)\n\t        .style(\"text-align\", \"center\")\n\n\t\tconst max = Math.max(...radiuses)\n\t\t// add nodes\n\t\tthis.legend.selectAll(\"rects\")\n\t\t.data(radiuses)\n\t\t.enter()\n\t\t.append(\"circle\")\n\t\t    .attr(\"cx\", max)\n\t\t    .attr(\"cy\", d => 2 * max - (d) + 0.5*lineHeight)\n\t\t    .attr(\"r\", d => d)\n\t\t\t.attr(\"fill\", \"white\")\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"alignment-baseline\", \"middle\")\n\n\t\tthis.legend.selectAll(\"rects\")\n\t\t.data(radiuses)\n\t\t.enter()\n\t\t.append(\"text\")\n\t\t    .attr(\"x\", max)\n\t\t    .attr(\"y\", (d, i) => {\n\t\t        // this is messy, but the best looking option I could find\n\t\t\t    // smallest circle is labelled in center, others at the top\n\t\t        if (i === 0){\n\t\t            return 2 * max - 1.4 * d\n\t\t\t    }\n\t\t        if (i === 1){\n\t\t            return 2 * max - 1.2 * d\n\t\t\t    }\n\t\t        return 2 * max - (d) + 0.5*lineHeight\n\t\t    })\n\t\t\t.text((d, i) => sizes[i])\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\n\t\tthis.legend\n\t\t\t.append('text')\n\t\t\t.text(\"RA Club Followers\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"x\", max)\n\t\t\t.attr(\"y\", 2 * max + lineHeight)\n\t}\n\n\texit(){\n\t\tsuper.exit()\n\t\tthis.simulation.stop()\n\t}\n\n\tcalculateRadius(e){\n\t\t// scale node radius according to svg size\n\t\tconst m = Math.min(this.width, this.height) / 800\n\t\treturn 12 * Math.log(Math.sqrt(e.followers)) * m\n\t}\n\n}\n\n\n\nexport {ClusterChart}","// wrapper around chart classes that allows us to switch between them\n// for transition purposes\n\nclass ChartWrapper{\n\n\tconstructor(svg, margin, categories, h, w, ChartType) {\n\t\tthis.svg = svg\n\t\tthis.initial = true\n\t\tthis.margin = margin\n\t\tthis.categories = categories\n\t\tthis.h = h\n\t\tthis.w = w\n\t\tthis.chart = new ChartType(svg, margin, categories, h, w)\n\t}\n\n    setChartType(nodes, ChartType){\n\t    this.chart.exit()\n        const newChart = new ChartType(\n            this.svg, this.margin, this.categories, this.h, this.w\n        )\n        newChart.g = this.chart.g\n        newChart.node = this.chart.node\n\t    newChart.initial = true\n        newChart.createGraph(nodes)\n        this.chart = newChart\n    }\n\n}\n\nexport {ChartWrapper}","import React, {Component} from 'react'\nimport './container.scss'\nimport BarChart from './BarChart'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faTimesCircle, faCheck} from '@fortawesome/free-solid-svg-icons'\nimport ScrollyTelling from \"./ScrollyTelling\"\nimport {fillColor, artistLink} from \"./lib\"\nimport {BeeSwarmChart} from \"./charts/BeeSwarmChart\"\nimport {CandleStickChart} from \"./charts/CandleStickChart\"\nimport {ClusterChart} from \"./charts/ClusterChart\"\nimport {ChartWrapper} from \"./charts/ChartWrapper\"\nimport SelectSearch from 'react-select-search';\n\n\nclass Container extends Component {\n\tcontrolHeight = 70\n\tmargin = {top: 10, right: 20, bottom: 20, left: 50}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.ref = React.createRef()\n\t\t// these are the currently selected values\n\t\t// if you need all values, you should use this.props.data\n\t\tthis.nodes = this.props.data.nodes\n\n\t\tthis.state = {\n\t\t\tselectedNodes: [],\n\t\t\tdata: {},\n\t\t\tfilters: {},\n\t\t\tdraw: true,\n\t\t\tchartType: \"Cluster\",\n\t\t\twidth: document.documentElement.clientWidth,\n\t\t\tsvgWidth: document.documentElement.clientWidth,\n\t\t\tsvgHeight: document.documentElement.clientHeight - this.controlHeight\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('resize', this.updateWindowDimensions)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateWindowDimensions()\n\t\twindow.addEventListener('resize', this.updateWindowDimensions)\n\t\t// sort so adjacent groups get different colors\n\t\tthis.categories = [\n\t\t\t...new Set(this.nodes.map(e => e.group).sort((a, b) => {\n\t\t\t\treturn a % 2 - b % 2 || a - b\n\t\t\t}))\n\t\t]\n\n\t\tconst svg = this.ref.current\n\t\tthis.chartWrapper = new ChartWrapper(\n\t\t\tsvg, this.margin, this.categories,\n\t\t\tthis.state.svgHeight, this.state.svgWidth,\n\t\t\tClusterChart\n\t\t)\n\t}\n\n\tonNodeClick = (node) => {\n\t\t// we allow max two selected nodes at a time\n\t\tlet selectedNodes = (this.state.selectedNodes || [])\n\t\tconst index = selectedNodes.indexOf(node)\n\t\tif (index !== -1){\n\t\t\tselectedNodes.splice(index, 1)\n\t\t}else{\n\t\t\tselectedNodes.push(node)\n\t\t}\n\t\tselectedNodes = selectedNodes.slice(-2)\n\t\tthis.setState({selectedNodes: selectedNodes})\n\t}\n\n\tcreateTable(header, data){\n\t\treturn <tr key={header+\"row\"}>\n\t\t\t<td key={header+\"cell\"}>{header}</td>\n\t\t\t{data.map((e, i) => {\n\t\t\t\treturn <td key={header+\"-\"+i}>{e}</td>\n\t\t\t})}\n\t\t</tr>\n\t}\n\n\tmostCommonArtists(){\n\t\treturn this.state.selectedNodes.map((node, i) => {\n\t\t\treturn Object.entries(node.artists)\n\t\t\t\t.sort((a, b) => b[1] - a[1])\n\t\t\t\t.slice(0, 5)\n\t\t\t\t.map((e, j) => {\n\t\t\t\t\tconst key = \"artist\"+i+\"-\"+j\n\t\t\t\t\treturn <li key={key}>\n\t\t\t\t\t\t{this.artistLink(e[0])}{\" - \" + e[1]}\n\t\t\t\t\t</li>\n\t\t\t\t})\n\t\t})\n\t}\n\n\tmostSimilarClubs(){\n\t\treturn this.state.selectedNodes.map(f => {\n\t\t\treturn this.props.data.links.filter((e) => {\n\t\t\t\treturn [e.source, e.target].includes(f.id)\n\t\t\t})\n\t\t\t.sort((a, b) => b.weight - a.weight)\n\t\t\t.slice(0, 5)\n\t\t\t.reduce((acc, e) => {\n\t\t\t\tconst club = e.source !== f.id? e.source : e.target\n\t\t\t\tacc.push(this.clubButton(f, club, e.weight))\n\t\t\t\treturn acc\n\t\t\t}, [])\n\t\t})\n\t}\n\n\tclubButton(parentClub, clubId, percentage=null){\n\t\treturn <li key={clubId}>\n\t\t\t<button\n\t\t\t\tclassName={\"clubButton\"}\n\t\t\t\tonClick={(e) => this.clubButtonClickHandler(clubId, parentClub)}\n\t\t\t>\n\t\t\t\t{clubId}\n\t\t\t</button> {percentage? \" - \" + (percentage*100).toFixed() + \"%\": \"\" }\n\t\t</li>\n\t}\n\n\tclubButtonClickHandler(clubId, parentClub){\n\t\tconst club = this.nodes.find(e => e.id === clubId)\n\t\t// we want to maintain the position of the parent club in selected club\n\t\tconst selectedClubs = this.state.selectedNodes[0] === parentClub?\n\t\t\t[parentClub, club] : [club, parentClub]\n\t\tthis.setState({selectedNodes: selectedClubs})\n\t}\n\n\tartistLink(artistName){\n\t\treturn artistLink(artistName, this.props.data.artist_names_to_ids)\n\t}\n\n\tshowSimilarities(){\n\t\tif (this.state.selectedNodes.length !== 2){\n\t\t\treturn ''\n\t\t}\n\n\t\tconst artists = this.state.selectedNodes.reduce((acc, e) => {\n\t\t\tacc.push(Object.keys(e.artists))\n\t\t\treturn acc\n\t\t}, [])\n\t\tconst union = artists[0].filter(e => artists[1].includes(e))\n\n\t\tif (union.length === 0){\n\t\t\treturn <div className={'similarities'}>\n\t\t\t\t<h4>No overlap in lineups - no common artists</h4>\n\t\t\t</div>\n\t\t}\n\n\t\tconst ids = this.state.selectedNodes.map(e => e.id)\n\t\tconst overlap = (this.props.data.links.find(e => {\n\t\t\treturn ids.includes(e.source) && ids.includes(e.target)\n\t\t}).weight * 100 ).toFixed(2)\n\n\t\treturn <div className={'similarities'}>\n\t\t\t<h4>\n\t\t\t\t{overlap}% overlap in lineups - {union.length} common artists:\n\t\t\t</h4>\n\t\t\t<ul>\n\t\t\t\t{union.map((e) => <li key={e}>{this.artistLink(e)}</li>)}\n\t\t\t</ul>\n\t\t</div>\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState){\n\t\tconst filters = this.state.filters\n\t\tif (Object.keys(filters).length !== 0){\n\t\t\tthis.nodes = this.props.data.nodes.filter((e) => {\n\t\t\t\treturn Object.keys(filters).every((f) => {\n\t\t\t\t\treturn filters[f] === \"all\" || e[f] === filters[f]\n\t\t\t\t})\n\t\t\t})\n\t\t}else{\n\t\t\tthis.nodes = this.props.data.nodes\n\t\t}\n\t\tif (this.state.chartType !== prevState.chartType){\n\t\t\tlet chartType\n\t\t\tif (this.state.chartType === \"Cluster\"){\n\t\t\t\tchartType = ClusterChart\n\t\t\t}\n\t\t\tif (this.state.chartType === \"CandleStick\"){\n\t\t\t\tchartType = CandleStickChart\n\t\t\t}\n\t\t\tif (this.state.chartType === \"BeeSwarm\"){\n\t\t\t\tchartType = BeeSwarmChart\n\t\t\t}\n\t\t    this.chartWrapper.setChartType(this.nodes, chartType)\n\t\t}\n\n\t\tif (this.state.draw){\n\t\t\tif (this.chartWrapper.chart.initial){\n\t\t\t\tthis.chartWrapper.chart.createGraph(this.nodes)\n\t\t\t}\n\t\t\tthis.chartWrapper.chart.drawGraph(\n\t\t\t\tthis.nodes,\n\t\t\t\tthis.onNodeClick,\n\t\t\t\tthis.state.selectedNodes\n\t\t\t)\n\t\t}\n\t}\n\n\tshowClubs(){\n\t\tconst clubs = this.state.selectedNodes\n\t\treturn <div className={\"clubInfo\"+clubs.length}>\n\t\t\t{clubs.map((e) => this.showClub(e))}\n\t\t\t{this.createClubTable()}\n\t\t</div>\n\t}\n\n\tshowClub(node){\n\t\tconst imgPath =`${process.env.PUBLIC_URL}/img/`\n\t\tconst img = node.logo === '' ? <div className={'placeholder'}/> : <div className={\"image center\"}>\n\t\t\t<img src={imgPath+node.logo.split(\"/\").slice(-1)[0]} alt={node.id} />\n\t\t</div>\n\t\tconst color = fillColor(node.group, this.categories)\n\t\tconst link = 'https://www.residentadvisor.net/club.aspx?id=' + node.club_id\n\n\t\treturn <div key={node.club_id} className={\"clubPanel\"}>\n\t\t\t<button\n\t\t\t\tclassName={\"clubButton\"}\n\t\t\t\tid={\"close\"}\n\t\t\t\tonClick={(e) => this.onNodeClick(node)}\n\t\t\t>\n\t\t\t\t <FontAwesomeIcon icon={faTimesCircle} />\n\t\t\t</button>\n\t\t\t<h3 style={{backgroundColor: color}} className={\"clubName\"}>\n\t\t\t\t<a rel={'noopener noreferrer'} target={'_blank'} href={link}>\n\t\t\t\t\t{node.id}\n\t\t\t\t</a>\n\t\t\t</h3>\n\t\t\t{img}\n\t\t\t<div className={\"center\"}>\n\t\t\t\t{node.region}\n\t\t\t\t{node.region === node.country ? \"\" : \" - \" + node.country}\n\t\t\t</div>\n\t\t</div>\n\t}\n\n\tcreateClubTable(){\n\t\tif (this.state.selectedNodes.length === 0){\n\t\t\treturn \"\"\n\t\t}\n\t\tconst rows = this.state.selectedNodes.map(club => {\n\t\t\treturn [\n\t\t\t\tclub.number_of_dates,\n\t\t\t\tclub.number_of_unique_artists,\n\t\t\t\tclub.total_number_of_artists,\n\t\t\t\tclub.followers,\n\t\t\t\t(club.attending / club.number_of_dates).toFixed(1),\n\t\t\t\t(club.total_number_of_artists / club.number_of_unique_artists || 0).toFixed(1),\n\t\t\t\t(club.total_number_of_artists / club.number_of_dates).toFixed(2),\n\t\t\t]\n\t\t})\n\n\t\tconst headers = [\n\t\t\t\"Number of events\",\n            \"Unique artists\",\n            \"Total artists booked\",\n            \"Followers\",\n\t\t\t\"Average event attendance\",\n\t\t\t\"Average bookings per artist\",\n\t\t\t\"Average artists per date\",\n\t\t]\n\n\t\tlet tableRows = headers.map((e, i) => {\n\t\t\treturn <tr key={i}>\n\t\t\t\t<td key={e} >{e}</td>\n\t\t\t\t{rows.map((e, j) => <td key={i+\"-\"+j}>{e[i]}</td>)}\n\t\t\t</tr>\n\t\t}).concat(\n\t\t\tthis.createTable(\"Most Booked Artists\", this.mostCommonArtists())\n\t\t).concat(\n\t\t\tthis.createTable(\"Most Similar Clubs\", this.mostSimilarClubs())\n\t\t)\n\n\t\tconst header = rows.length !== 2? null : <thead>\n\t\t\t<tr>\n\t\t\t\t<th key={\"empty\"} />\n\t\t\t\t{this.state.selectedNodes.map(e=><th key={e.id}>{e.id}</th>)}\n\t\t\t</tr>\n\t\t</thead>\n\t\treturn <table>\n\t\t\t{header}\n\t\t\t<tbody>{tableRows}</tbody>\n\t\t</table>\n\t}\n\n\tshowGroup(){\n\t\tif (this.state.selectedNodes.length !== 1 ){\n\t\t\treturn \"\"\n\t\t}\n\t\tconst club = this.state.selectedNodes[0]\n\t\tconst groupClubs = this.props.data.nodes.filter(e => {\n\t\t\treturn club.group === e.group && e.id !== club.id\n\t\t})\n\t\tif (groupClubs.length < 2){\n\t\t\treturn <h3 className={\"cluster\"}>No other clubs in this cluster</h3>\n\t\t}\n\n\t\tconst stats = groupClubs.reduce((acc, e) => {\n\t\t\tacc[e.region] = (acc[e.region] + 1 || 1)\n\t\t\treturn acc\n\t\t}, {})\n\n\t\tconst color = fillColor(club.group, this.categories)\n\t\treturn <div className={\"cluster\"} style={{width: '50%'}}>\n\t\t\t<h3 >\n\t\t\t\tOther clubs in this cluster\n\t\t\t</h3>\n\t\t\t<BarChart\n\t\t\t\tdata={Object.entries(stats)}\n\t\t\t\twidth={312}\n\t\t\t\theight={210}\n\t\t\t\tcolor={color}\n\t\t\t/>\n\t\t\t<ul>\n\t\t\t\t{groupClubs.map(e => this.clubButton(club, e.id))}\n\t\t\t</ul>\n\t\t</div>\n\t}\n\n\tsetFilters = (key, value) => {\n\t\tconst filter = {}\n\t\tfilter[key] = value\n\t\tthis.setState({\"filters\": filter, \"selectedNodes\": []})\n\t}\n\n\tupdateWindowDimensions = () => {\n\t\tconst w = document.documentElement.clientWidth\n\t\tconst h = document.documentElement.clientHeight\n\t\tthis.setState({\n\t\t\twidth: w, height: h, svgWidth: w, svgHeight: h - this.controlHeight\n\t\t})\n\t}\n\n\tcontrols(){\n\t\tconst filters = this.state.filters\n\t\tconst selectedRegion = filters.region? filters.region : \"all\"\n\t\tconst selectedCountry = filters.country? filters.country : \"all\"\n\n\t\tconst clubs = this.props.data.nodes.filter((e) => {\n\t\t\tif (selectedRegion !== \"all\") {\n\t\t\t\treturn e.region === selectedRegion\n\t\t\t}\n\t\t\tif (selectedCountry !== \"all\"){\n\t\t\t\treturn e.country === selectedCountry\n\t\t\t}\n\t\t\treturn true\n\t\t}).map((e) => {\n\t\t\treturn {\n\t\t\t\t\"name\": e.id,\n\t\t\t\t\"value\": e.id,\n\t\t\t\t\"color\": fillColor(e.group, this.categories || [])\n\t\t\t}\n\t\t})\n\n\t\tconst countries = [...new Set(this.props.data.nodes.map(e => e.country))]\n\t\t\t.sort()\n\t\t\t.map(c => ({\"name\": c, \"value\": c}))\n\n\t\tconst regions = [...new Set(this.props.data.nodes.map(e => e.region))]\n\t\t\t.sort()\n\t\t\t.map(c => ({\"name\": c, \"value\": c}))\n\n\t\tconst allCountries = [{name: \"All Countries\", value: \"all\"}]\n\t\tconst allRegions = [{name: \"All Regions\", value: \"all\"}]\n\t\treturn <>\n\t\t\t<SelectSearch\n\t\t\t\toptions={allCountries.concat(countries)}\n\t\t\t\tname=\"country\"\n\t\t\t\tplaceholder=\"Select a country\"\n\t\t\t\tvalue={selectedCountry}\n\t\t        onChange={(value) => this.setFilters(\"country\", value)}\n\t\t\t\trenderOption={this.renderOption}\n\t\t\t/>\n\t\t\t<SelectSearch\n\t\t\t\toptions={allRegions.concat(regions)}\n\t\t\t\tname=\"region\"\n\t\t\t\tplaceholder=\"Select a region\"\n\t\t\t\tvalue={selectedRegion}\n\t\t        onChange={(value) => this.setFilters(\"region\", value)}\n\t\t\t\trenderOption={this.renderOption}\n\t\t\t/>\n\t\t\t<SelectSearch\n\t\t\t\toptions={clubs}\n\t\t\t\tname=\"club\"\n\t\t\t\tvalue={this.state.selectedNodes.map(e => e.id)}\n\t\t\t\tsearch={true}\n\t\t\t\tplaceholder=\"Select a club\"\n\t\t\t\tonChange={(e) => this.searchSelect(e)}\n\t\t\t\trenderOption={this.renderOption}\n\t\t\t/>\n\t\t</>\n\t}\n\n    renderOption(domProps, option, snapshot, className){\n        return <button className={className} {...domProps}>\n\t        {option.color &&\n\t            <span className={\"dot\"} style={{backgroundColor: option.color}}/>\n\t        }\n            {option.name}\n\t        {snapshot.selected && <FontAwesomeIcon icon={faCheck} />}\n        </button>\n\t}\n\n\tsearchSelect(selectedId){\n\t\tconst selectedClubs = this.props.data.nodes.find((e) => {\n\t\t\treturn selectedId === e.id\n\t\t})\n\t\tthis.onNodeClick(selectedClubs)\n\t}\n\n\tshowClubInfo(){\n\t\tif (this.state.selectedNodes.length === 0){\n\t\t\treturn <div className={\"clubDetail hidden\"} />\n\t\t}\n\t\treturn <div className={\"clubDetail visible\"}>\n\t\t\t{this.showClubs()}\n\t\t\t{this.showGroup()}\n\t\t\t{this.showSimilarities()}\n\t\t</div>\n\t}\n\n\t// hack so on step enter can change the selectedNodes\n\tsetAsyncState = (newState) => new Promise(\n\t\t(resolve) => this.setState(newState, resolve)\n\t)\n\n    onStepEnter = ({element, data, direction}) => {\n\t    if (data){\n\t    \t// reset any selection from user before setting step data\n\t    \tthis.setAsyncState({selectedNodes: []}).then(this.setState(data))\n\t    }\n\t}\n\n\trender() {\n\t\tconst controls = this.state.chartType !== \"CandleStick\" && this.controls()\n\t\treturn <div className=\"container\" id={\"start\"}>\n\t\t\t<div className={\"controls\"}>\n\t\t\t\t{controls}\n\t\t\t</div>\n\t\t\t<div id={\"tooltip\"} />\n\t\t\t<ScrollyTelling\n\t\t\t\tenter={this.onStepEnter}\n\t\t\t\tnodes={this.props.data.nodes}\n\t\t\t\tlinks={this.props.data.links}\n\t\t\t/>\n\t\t\t<div className={\"graphic\"}>\n\t\t\t\t<svg\n\t\t\t\t\tref={this.ref}\n\t\t\t\t\twidth={this.state.svgWidth}\n\t\t\t\t\theight={this.state.svgHeight}\n\t\t\t\t/>\n\t\t\t\t{this.showClubInfo()}\n\t\t\t</div>\n\n        </div>\n\t}\n}\n\nexport default Container","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faSyncAlt, faMobileAlt} from \"@fortawesome/free-solid-svg-icons\"\nimport React from \"react\"\nimport './rotate.scss';\n\n\nfunction Rotate(){\n\treturn <div className=\"rotate\">\n\t\t<div className={\"center\"}>\n\t\t\t<h2>\n\t\t\t\tPlease turn your phone to landscape mode to properly view\n\t\t\t\tthis webpage.\n\t\t\t</h2>\n\t\t\t<FontAwesomeIcon icon={faMobileAlt}/>\n\t\t\t<FontAwesomeIcon icon={faSyncAlt} spin={true}/>\n\t\t\t<h2>\n\t\t\t\tThanks!\n\t\t\t</h2>\n\t\t</div>\n\t</div>\n}\n\nexport default Rotate","import React, {Component} from 'react'\nimport './sections.scss';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport Rotate from \"./Rotate\"\n\nclass Intro extends Component {\n\trender(){\n\t\tconst content = <>\n\t\t\t<h1 className=\"center\">\n\t\t\t\tClubster Analysis\n\t\t\t</h1>\n\t\t\t<h3>\n\t\t\t\t Comparing the bookings at the worlds most popular nightclubs\n\t\t\t</h3>\n\t\t\t<p>\n\t\t\t\tHow similar or different are the line ups of the most popular nightclubs in the world?\n\t\t\t\tWhich clubs rely on residents and which have endlessly rotating talent?\n\t\t\t\tHow similar are the bookings of clubs in different countries and continents?\n\t\t\t\tAre the super clubs different from the underground venues?\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tIn an attempt to answer these questions and others like them we looked\n\t\t\t\tat the most recommended clubs for the most popular regions on the\n\t\t\t\treputable website <a href=\"https://www.residentadvisor.net/events\">Resident Advisor (RA)</a>.\n\t\t\t\tWe gathered all their listings for 2019 and then compared\n\t\t\t\tthe clubs based on the djs and artists who played there that year.\n\t\t\t\tTake a look to see how your favourite club fits in.\n\t\t\t</p>\n\t\t\t<h3>\n\t\t\t\tScroll down to get started!\n\t\t\t</h3>\n\t\t\t<div className={'scrollDown center'}>\n\t\t\t\t<a href=\"#start\">\n\t\t\t\t\t<FontAwesomeIcon icon={faChevronDown} />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</>\n\t\treturn <Section content={content} intro={true}/>\n\t}\n}\n\nclass Outro extends Component {\n\trender (){\n\t\tconst content = <>\n\t\t\t<p>\n\t\t\t\tThat concludes this analysis of the bookings and line ups for\n\t\t\t\tthe most recommended clubs in the most popular regions on Resident\n\t\t\t\tAdvisor. I hope it has provided insight into how these clubs are\n\t\t\t\talike and different and given you a glimpse of how the world of\n\t\t\t\telectronic dance music worked in 2019.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe data was retrieved in April to May 2020.\n\t\t\t\tIf you'd like to learn more you can view all the <a href=\"https://github.com/Kalli/clubster-analysis\">code</a> for\n\t\t\t\tretrieving and visualising this data. If you have any questions\n\t\t\t\tyou can reach me on <a href=\"https://twitter.com/karltryggvason\">twitter</a> or\n\t\t\t\tthrough <a href=\"mailto:ktryggvason@gmail.com\">email</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tA <a href=\"https://lazilyevaluated.co/\">Lazily Evaluated</a> production.\n\t\t\t\tBy <a href=\"https://karltryggvason.com/\">Karl Tryggvason</a> and <a href=\"http://mtryggvason.github.io/\">Magnús Felix Tryggvason</a>\n\t\t\t</p>\n\t\t</>\n\t\treturn <Section content={content} intro={false} />\n\t}\n}\n\nclass Section extends Component {\n\trender(){\n\t\tconst contentClass = \"sectionsContent \" + (\n\t\t\t!this.props.intro? \"bottom\" : \"\"\n\t\t)\n\t\treturn <div className={\"sections\"}>\n\t\t\t<div className={ this.props.intro? \"top\" : \"\"} />\n\t\t\t<Rotate />\n\t\t\t<div className={contentClass}>\n\t\t\t\t<div className=\"jumbotron\">\n\t\t\t\t\t{this.props.content}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t}\n}\n\nexport {Intro, Outro}","import React, {Component} from 'react'\nimport './navbar.scss'\n\n\nclass Navbar extends Component {\n\trender() {\n\t\treturn <nav className=\"navbar\" id={'nav'}>\n\t\t\t<h1 className=\"center\">\n\t\t\t\t<a href=\"http://lazilyevaluated.co/\">\n\t\t\t\tLazily Evaluated\n\t\t\t\t</a>\n\t\t\t</h1>\n\t\t</nav>\n\t}\n}\n\nexport default Navbar","import React, {Component} from 'react';\nimport Container from './Container'\nimport {Intro, Outro} from './Sections'\nimport Navbar from './navbar'\n\nclass App extends Component {\n\n\tconstructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n\t        data: {}\n        }\n    }\n\n    loadData() {\n        fetch(`${process.env.PUBLIC_URL}/network-2019.json`)\n            .then( (response) => {\n                return response.json()\n            })\n            .then( (data) => {\n            \t// change arrays into objects\n\t            data.nodes = data.nodes.map(e =>{\n\t            \treturn e.reduce((acc, e, i) => {\n\t            \t\tacc[data.node_keys[i]] = e\n\t            \t\treturn acc\n\t\t            }, {})\n\t            })\n\t            data.links = data.links.map(e =>{\n\t            \treturn e.reduce((acc, e, i) => {\n\t            \t\tacc[data.link_keys[i]] = e\n\t            \t\treturn acc\n\t\t            }, {})\n\t            })\n            \tthis.setState({\n\t\t            loading: false,\n\t\t            data: data,\n            \t})\n            });\n    }\n\n\tcomponentDidMount() {\n        this.setState({\n\t        loading: true,\n            data: this.loadData()\n        })\n    }\n\n    render(){\n\t    const container = this.state.loading? '' : <Container\n\t\t    data={this.state.data}\n\t    />\n        return (\n            <>\n\t            <Navbar />\n\t            {<Intro />}\n                {container}\n\t            {<Outro />}\n            </>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}