{"version":3,"sources":["steps.md","BarChart.js","lib.js","ScrollyTelling.js","charts/Chart.js","charts/BeeSwarmChart.js","charts/CandleStickChart.js","textHandling.js","charts/ClusterChart.js","charts/ChartWrapper.js","Container.js","Rotate.js","Sections.js","navbar.js","App.js","index.js"],"names":["module","exports","BarChart","props","createGraph","data","w","h","color","margin","width","height","svg","select","ref","current","attr","x","scaleBand","domain","range","length","padding","y","scaleLinear","max","map","e","append","selectAll","join","d","i","bandwidth","call","g","axisBottom","tickFormat","tickSizeOuter","style","axisLeft","ticks","remove","text","React","createRef","this","Component","fillColor","category","categories","interpolateWarm","indexOf","factorial","n","ScrollyTelling","stepsData","draw","filters","region","selectedNodes","scroll","chartType","country","state","steps","links","reduce","acc","weight","source","target","nodes","filter","includes","club_id","clubCount","averageWeight","combinations","Math","floor","averageResidency","number_of_unique_artists","total_number_of_artists","toFixed","fetch","then","response","html","marked","Object","keys","forEach","k","replace","split","setState","stepHtml","className","dangerouslySetInnerHTML","__html","step","key","onStepEnter","enter","offset","debug","Chart","initial","left","right","top","bottom","legend","active","t","transition","duration","node","BeeSwarmChart","group","drawGraph","clickHandler","filterNodes","calculateInitialPositions","id","exit","newNode","radius","merge","highlightSelected","stepBand","yScale","random","xScale","number_of_dates","groups","Set","createLegend","yOffset","translate","axis","tickValues","concat","labelOffset","CandleStickChart","candleStickData","groupBy","push","sort","a","b","ceil","min","count","exitPrevChart","on","click","tooltip","tooltipData","detail","event","pageX","pageY","Array","from","bw","each","agg","mean","drawBox","percentile_5","percentile_95","drawWhiskers","drawMean","addLabel","start","rows","club","CHAR_W","A","B","C","c","D","E","F","f","G","H","I","J","j","K","L","l","M","m","N","O","o","P","p","Q","q","R","r","S","s","T","U","u","V","v","W","X","Y","Z","z","fitTextToScreen","fittedText","ClusterChart","decay","timer","elapsed","dt","simulation","force","strength","pow","stop","cluster","zoom","zoomGroup","transform","drag","dragstarted","dragged","dragended","calculateRadius","alphaTarget","restart","setTimeout","tick","groupCount","clusters","angle","PI","cos","sin","alpha","sqrt","initialize","_","fx","fy","forceSimulation","forceCenter","forceX","forceY","forceCollide","zoomHandler","scaleExtent","type","nodeName","sizes","radiuses","followers","log","ChartWrapper","ChartType","chart","newChart","Container","controlHeight","onNodeClick","index","splice","slice","setFilters","name","value","parseInt","updateWindowDimensions","document","documentElement","clientWidth","clientHeight","svgWidth","svgHeight","element","direction","console","window","removeEventListener","addEventListener","chartWrapper","header","entries","artists","artistLink","clubButton","parentClub","clubId","percentage","onClick","clubButtonClickHandler","find","selectedClubs","artistName","artist_names_to_ids","artistId","toLowerCase","href","rel","union","ids","overlap","prevProps","prevState","every","constructor","setChartType","clubs","showClub","createClubTable","imgPath","process","img","logo","src","alt","link","icon","faTimesCircle","backgroundColor","attending","tableRows","createTable","mostCommonArtists","mostSimilarClubs","groupClubs","stats","showClubs","showGroup","showSimilarities","showClubInfo","Rotate","faMobileAlt","faSyncAlt","spin","Intro","content","faChevronDown","intro","Outro","Section","contentClass","Navbar","App","loading","json","node_keys","link_keys","loadData","container","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.415c0558.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/steps.bc0e7744.md\";","import React, {Component} from 'react'\nimport {select} from 'd3-selection'\nimport {scaleBand, scaleLinear} from 'd3-scale'\nimport {axisLeft, axisBottom} from 'd3-axis'\nimport {range, max} from 'd3-array'\n\n\nclass BarChart extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.ref = React.createRef()\n\t}\n\n\tcomponentDidMount() {\n\t\tconst {data, width, height, color} = this.props\n\t\tthis.createGraph(data, width, height, color)\n\t}\n\n\tcreateGraph = (data, w, h, color) => {\n\t\tvar margin = {top: 10, right: 0, bottom: 70, left: 40}\n\t    const width = w - margin.left - margin.right\n\t    const height = h - margin.top - margin.bottom\n\n\t\tconst svg = select(this.ref.current).attr(\"viewBox\", [0, 0, w, h])\n\n\t\tconst x = scaleBand()\n\t\t\t.domain(range(data.length))\n\t\t\t.range([margin.left, width - margin.right])\n            .padding(0.1)\n\n\t\tconst y = scaleLinear()\n\t\t\t.domain([0, max(data.map(e=>[e[1]]))])\n\t\t\t.range([height, margin.top])\n\n\t\tconst xAxis = g => g\n\t\t    .attr(\"transform\", `translate(0,${h - margin.bottom - margin.top})`)\n            .call(\n            \taxisBottom(x).tickFormat(i => data[i][0]).tickSizeOuter(0)\n            ).selectAll(\"text\")\n\t\t     .style(\"text-anchor\", \"end\")\n\t\t     .attr(\"dx\", \"-.8em\")\n\t\t     .attr(\"dy\", \".15em\")\n\t\t     .attr(\"transform\", \"rotate(-65)\")\n\n\t\tconst yAxis = g => g\n\t\t    .attr(\"transform\", `translate(${margin.left},0)`)\n\t\t    .call(axisLeft(y).ticks(5))\n\t\t    .call(g => g.select(\".domain\").remove())\n\t\t    .call(g => g.append(\"text\")\n\t\t        .attr(\"x\", -margin.left)\n\t\t        .attr(\"y\", 10)\n\t\t        .attr(\"fill\", \"currentColor\")\n\t\t        .attr(\"text-anchor\", \"start\")\n\t\t        .text(data.y))\n\n\t\tsvg\n\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"fill\", color)\n\t\t\t.selectAll(\"rect\")\n\t\t\t.data(data)\n\t\t\t.join(\"rect\")\n\t\t\t\t.attr(\"x\", (d, i) => x(i))\n\t\t\t\t.attr(\"y\", d => y(d[1]))\n\t\t\t\t.attr(\"height\", d =>  y(0) - y(d[1]))\n\t\t\t\t.attr(\"width\", x.bandwidth())\n\n\t\tsvg.append(\"g\").call(xAxis)\n\t\tsvg.append(\"g\").call(yAxis)\n\t}\n\n\trender() {\n\t\treturn <svg ref={this.ref}\n\t\t     width={this.props.width}\n\t\t     height={this.props.height}\n\t\t/>\n\t}\n}\n\nexport default BarChart","import {interpolateWarm} from 'd3-scale-chromatic'\nimport React from \"react\"\n\nfunction fillColor(category, categories){\n\treturn interpolateWarm(\n\t\tcategories.indexOf(category) / categories.length\n\t)\n}\n\nconst factorial = (n) => !(n > 1) ? 1 : factorial(n - 1) * n;\n\n\nfunction artistLink(artistName, artist_names_to_ids){\n\tconst artistId = ( artist_names_to_ids[artistName] ||\n\t\t\tartistName.toLowerCase().replace(' ', '')\n\t)\n\treturn <a\n\t\thref={'https://www.residentadvisor.net/dj/' + artistId}\n\t\trel={'noopener noreferrer'}\n\t\ttarget={'_blank'}\n\t>\n\t\t{artistName}\n\t</a>\n}\n\nexport {fillColor, factorial, artistLink}\n","import React, {Component} from \"react\"\nimport {Scrollama, Step} from \"react-scrollama\"\nimport marked from \"marked\"\nimport steps from \"./steps.md\"\nimport \"./ScrollyTelling.scss\"\nimport {factorial} from \"./lib\"\n\n\nclass ScrollyTelling extends Component {\n\n\tstepsData = [\n\t\t{draw: true, filters: {region: \"all\"}, selectedNodes: [], scroll: true},\n\t\t{filters: {region: \"Berlin\"}, chartType: 'Cluster', selectedNodes: []},\n\t\t{filters: {country: \"all\"}, chartType: 'Cluster', selectedNodes: [] },\n\t\t{filters: {region: \"all\"}, chartType: 'BeeSwarm', selectedNodes: []},\n\t\t{filters: {region: \"all\"}, chartType: 'BeeSwarm', selectedNodes: []},\n\t\t{filters: {region: \"all\"}, chartType: 'CandleStick', selectedNodes: []},\n\t]\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tsteps: null,\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\t// fetch the markdown and replace any variables\n\t\tconst {source, target, weight} = this.props.links.reduce((acc, e)=>{\n\t\t\treturn acc.weight > e.weight? acc : e\n\t\t}, {weight: 0})\n\n\t\t// Show De School and Berghain in step 4\n\t\tthis.stepsData[2].selectedNodes = this.props.nodes.filter((e) => {\n\t\t\treturn [112491, 5031].includes(e.club_id)\n\t\t})\n\t\tconst clubCount = this.props.nodes.length\n\t\tconst total = this.props.links.reduce((acc, e) => acc+e.weight, 0)\n\t\tconst averageWeight = total / this.props.links.length\n\t\tconst combinations = Math.floor(\n\t\t\tfactorial(clubCount) / (2 * factorial(clubCount - 2))\n\t\t)\n\n\t\tconst averageResidency = (this.props.nodes.reduce((acc, e) => {\n\t\t\tif (e.number_of_unique_artists !== 0){\n\t\t\t\treturn acc + e.total_number_of_artists / e.number_of_unique_artists\n\t\t\t}\n\t\t\treturn acc\n\t\t}, 0) / clubCount).toFixed(2)\n\n\t\tconst data = {\n\t\t\t\"$clubCount\": clubCount,\n\t\t\t\"$linkCount\": this.props.links.length,\n\t\t\t\"$source\": source,\n\t\t\t\"$target\": target,\n\t\t\t\"$weight\": (weight*100).toFixed(0),\n\t\t\t\"$combinations\": combinations,\n\t\t\t\"$averageWeight\": (averageWeight*100).toFixed(0.2),\n\t\t\t\"$averageResidency\": averageResidency,\n\t\t}\n\n\t\tfetch(steps)\n\t\t\t.then(response => {\n\t\t\t\treturn response.text()\n\t\t\t})\n\t\t\t.then(text => {\n\t\t\t\tlet html = marked(text)\n\t\t\t\tObject.keys(data).forEach(k => html = html.replace(k, data[k]))\n\t\t\t\tconst steps = html.split('<hr>')\n\t\t\t\tthis.setState({steps: steps})\n\t\t\t})\n\t}\n\n\tstep(stepHtml) {\n\t\treturn <div className={\"step \"}>\n\t\t\t<div dangerouslySetInnerHTML={{__html: stepHtml}} />\n\t\t</div>\n\t}\n\n\trender() {\n\n\t\tif (!this.state.steps){\n\t\t\treturn \"\"\n\t\t}\n\n\t\tconst steps = this.state.steps.map((step, i) => {\n\t\t\treturn <Step key={i} data={this.stepsData[i]}>\n\t\t\t\t{this.step(step)}\n\t\t\t</Step>\n\t\t})\n\t\treturn <div className={\"scroller\"}>\n\t\t\t<Scrollama\n\t\t\t\tonStepEnter={this.props.enter}\n\t\t\t\toffset={0.75}\n\t\t\t\tdebug\n\t\t\t>\n\t\t\t\t{steps}\n\t\t\t</Scrollama>\n\t\t</div>\n\t}\n}\n\nexport default ScrollyTelling","import {select, selectAll} from 'd3-selection'\nimport {transition} from 'd3-transition'\n\n// Common chart functionality\nclass Chart{\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tthis.svg = svg\n\t\tthis.initial = true\n\t\tthis.margin = margin\n\t\tthis.categories = categories\n\t\tthis.width = w - this.margin.left - this.margin.right\n\t    this.height = h - this.margin.top - this.margin.bottom\n\t\tthis.legend = null\n\t\tthis.active = true\n\t\tthis.t = transition().duration(1500)\n\t}\n\n\tcreateGraph(nodes){\n\t\tif (!this.g) {\n\t\t\tthis.g = select(this.svg)\n\t\t\t\t.append(\"g\")\n\t\t\t\t.attr(\"class\", \"graph\")\n\t\t\tthis.node = this.g.selectAll(\"circle\")\n\t\t}\n\t\tthis.g.transition(1000).attr(\"transform\", \"translate(0, 0), scale(1)\")\n\t}\n\n\thighlightSelected(selectedNodes){\n\t\t// highlight selected nodes if any\n\t\tthis.g\n\t\t\t.selectAll(\".nodes\")\n\t\t\t.style(\"opacity\", (d)=>{\n\t\t\t\treturn selectedNodes.includes(d)? 0.6 : 1\n\t\t\t})\n\t\tthis.g\n\t\t\t.selectAll(\".label\")\n\t\t\t.attr(\"text-decoration\", (d)=>{\n\t\t\t\treturn selectedNodes.includes(d)? \"underline\" : \"\"\n\t\t\t})\n\t}\n\n\texit(){\n\t\tthis.active = false\n\t\tselectAll(\".legend\").transition(2500).style(\"opacity\", 0).remove()\n\t}\n}\n\nexport {Chart}","import {select} from 'd3-selection'\nimport {scaleLinear, scaleBand} from 'd3-scale'\nimport {max} from 'd3-array'\nimport {axisBottom} from 'd3-axis'\nimport './Chart.scss'\nimport {Chart} from \"./Chart\"\nimport {fillColor} from \"../lib\"\n\nclass BeeSwarmChart extends Chart{\n\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tsuper(svg, margin, categories, h, w)\n\t\tthis.groups = []\n\t\tthis.radius = 15\n\t}\n\n\ty = e => e.group\n\n\tx = e => {\n\t\treturn e.number_of_unique_artists !== 0?\n\t\t\te.total_number_of_artists / e.number_of_unique_artists : 0\n    }\n\n\tcreateGraph(nodes){\n\t\tsuper.createGraph(nodes)\n\n\t\t// filter out 0 attributes from nodes\n\t\tthis.filterNodes(nodes)\n\n\t\t// how many bands do we have on the y axis\n\t\tthis.groups = [...new Set(this.nodes.map(e => this.y(e)))]\n\n        this.xScale = scaleLinear()\n            .domain([1, max(this.nodes, d => this.x(d))])\n            .range([\n            \tthis.margin.left,\n\t            this.width - this.margin.right - this.margin.left\n            ])\n\n        this.yScale = scaleBand()\n            .domain(this.groups)\n            .range([\n            \tthis.margin.top,\n\t            this.height + this.margin.top - this.margin.bottom\n            ])\n\t\tthis.createLegend()\n\t\t// resize all nodes\n\t\tthis.node.selectAll(\"circle\")\n\t\t\t.transition(this.t)\n\t\t\t.attr(\"r\", this.radius)\n\n\t\t// and hide labels\n\t\tthis.node.selectAll(\"text\")\n\t\t\t.transition(this.t)\n\t\t\t.style(\"opacity\", \"0\")\n\t\t\t.style(\"display\", \"none\")\n\t\t\t.text(d => d.id + \" - \" + this.x(d).toFixed(2))\n\t}\n\n\tdrawGraph = (nodes, clickHandler, selectedNodes) => {\n\n\t\tthis.filterNodes(nodes)\n\t\tif (this.initial){\n\t\t\tthis.calculateInitialPositions()\n\t\t}\n\n\t\tthis.node = this.node.data(this.nodes, d => d.id)\n\t\tthis.node.exit()\n\t\t\t.remove()\n\n\t\tlet newNode = this.node.enter()\n\t\t\t.append(\"g\")\n\n\t\tnewNode\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"r\", this.radius)\n\t\t\t.attr(\"fill\", d => fillColor(d.group, this.categories))\n\t\t\t.attr(\"class\", \"nodes\")\n\t\t\t.style(\"fill-opacity\", this.initial? 1: 0)\n\n\t\tnewNode\n\t\t\t.append(\"text\")\n\t\t\t.style(\"opacity\", \"0\")\n\t\t\t.style(\"display\", \"none\")\n\t\t\t.text(d => d.id + \" - \" + this.x(d).toFixed(2))\n\n\t\tthis.node = this.node.merge(newNode)\n\t    // if we are transitioning from another chart:\n\t\tif (this.initial){\n\t\t    this.node.transition(this.t)\n                .attr(\"transform\", d => \"translate(\"+d.x + \",\" + d.y+\")\")\n\t\t}\n\n\t\tthis.highlightSelected(selectedNodes)\n\t\tthis.initial = false\n\t}\n\n\tcalculateInitialPositions = () => {\n\t\t// Calculate positions\n\t\tconst stepBand = Math.floor(this.yScale.step()/this.radius)\n\t\tthis.nodes.forEach((e, i) => {\n\t\t\tconst offset = Math.floor(Math.random() * stepBand)\n\t        e.x  = this.xScale(this.x(e))\n            e.y = this.yScale(this.y(e)) + offset * this.radius\n\t\t})\n\t}\n\n\tfilterNodes = (nodes) => {\n\t\tconst minDates = 10\n\t\tconst minArtists = 20\n\t\tthis.nodes = nodes.filter(e =>{\n\t\t\treturn (\n\t\t\t\tthis.x(e) !== 0 &&\n\t\t\t\te.number_of_unique_artists > minArtists &&\n\t\t\t\te.number_of_dates > minDates\n\t\t\t)\n\t\t})\n\t}\n\n\tcreateLegend(){\n\t\tconst yOffset = this.height + this.margin.top - this.margin.bottom\n\t\tconst translate = `translate(0, ${yOffset})`\n\t\tthis.legend = select(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"legend\")\n\t\t\t.attr(\"transform\", translate)\n\t\tconst axis = axisBottom(this.xScale)\n\t\t\t.tickValues(this.xScale.ticks().concat(this.xScale.domain()))\n\t\tthis.legend.call(axis)\n\n\t\tconst labelOffset = `translate(0, ${this.margin.top + 20})`\n\t\tselect(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", labelOffset)\n\t\t\t.attr(\"class\", \"label legend\")\n\t\t\t.append('text')\n\t\t    .text(\"Average number of bookings per artist by club in 2019\");\n\t}\n}\n\nexport {BeeSwarmChart}","import {select, event} from 'd3-selection'\nimport {scaleLinear, scaleBand} from 'd3-scale'\nimport {max} from 'd3-array'\nimport {axisBottom} from 'd3-axis'\nimport './Chart.scss'\nimport {Chart} from \"./Chart\"\n\n\nclass CandleStickChart extends Chart{\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tsuper(svg, margin, categories, h, w)\n\t\tthis.groups = []\n\t\tthis.tooltipData = null\n\t}\n\n\ty = e => {\n\t\treturn this.groups.indexOf(e)\n\t}\n\n\tx = e => {\n\t\treturn e.number_of_unique_artists !== 0?\n\t\t\te.total_number_of_artists / e.number_of_unique_artists : 0\n    }\n\n    candleStickData = () => {\n\t\tconst groups = this.nodes.reduce((acc, e) => {\n\t\t\tconst key = e[this.groupBy]\n\t\t\tacc[key] ? acc[key].push(e) : acc[key] = [e]\n\t\t\treturn acc\n\t\t}, {})\n\t    return Object.keys(groups).reduce((acc, key) => {\n\t    \tconst nodes = groups[key].sort((a, b) => this.x(b) - this.x(a))\n\t\t    const d = nodes.map(e => this.x(e)).sort()\n\t\t    acc.push({\n\t\t\t    'percentile_95': d[Math.floor(0.95*d.length)-1],\n\t\t\t    'percentile_5': d[Math.ceil(0.05*d.length)],\n\t\t\t\t'mean': d.reduce((acc, e) => acc + e, 0) / d.length,\n\t\t\t    'max': Math.max(...d),\n\t\t\t    'min': Math.min(...d),\n\t\t\t    'count': d.length,\n\t\t\t    'id': key,\n\t\t\t    'nodes': nodes\n\t\t    })\n\t    \treturn acc\n\t    }, []).filter((e) => e.count > 1)\n\t}\n\n\tcreateGraph(nodes){\n\t\tsuper.createGraph(nodes)\n\t\tthis.groupBy = 'region'\n\n\t\t// filter out 0 attributes from nodes\n\t\tthis.filterNodes(nodes)\n\t\tthis.data = this.candleStickData()\n\t\t// how many bands do we have on the y axis\n\t\tthis.groups = [...new Set(this.data.map(e => e.id))]\n\n        this.xScale = scaleLinear()\n            .domain([1, max(this.nodes, d => this.x(d))])\n            .range([\n            \tthis.margin.left,\n\t            this.width - this.margin.right - this.margin.left\n            ])\n\n        this.yScale = scaleBand()\n            .domain(Array.from(Array(this.groups.length).keys()))\n            .range([\n            \tthis.margin.top,\n\t            this.height + this.margin.top - this.margin.bottom\n            ])\n\t\tthis.createLegend()\n\t\tthis.bw = this.yScale.bandwidth();\n\t}\n\n\texitPrevChart(){\n\t\tlet n = 0\n\t\tthis.node.exit()\n\t\t\t.each(() => n++)\n\t\t\t.attr(\"class\", \"candlestick\")\n\t\t\t.transition(\"exit\").duration(2000)\n            .attr(\"transform\", d => {\n            \tconst agg = this.data.filter(e => e.id === d[this.groupBy])[0]\n\t            const x = agg? this.xScale(agg.mean) : 0\n            \tconst y = this.yScale(this.y(d.region)) + this.bw / 2\n\t            if (x === 0){\n\t            \treturn \"scale(0, 0)\"\n\t            }\n            \treturn \"translate(\"+ x + \",\" + (y? y : 0) +\")\"\n            })\n\t\t\t.on('end', () => {\n\t\t\t\tn--\n\t\t\t\tif (n === 0){\n\t\t\t\t\tthis.drawBox()\n\t\t\t\t}\n\t\t\t})\n\t\t\t.transition().duration(2000)\n\t\t\t.remove()\n\t}\n\n\tdrawBox(){\n\t\tlet n = 0\n\n\t\tthis.newNode\n\t\t\t.each(() => n++)\n\t\t\t.append(\"rect\")\n\t\t\t.attr(\"height\", 0)\n\t\t\t.attr(\"width\", 0)\n\t        .attr(\"class\", \"fill\")\n\t\t\t.attr(\"x\", d => this.xScale(d.mean))\n\t\t\t.attr(\"rx\", 15)\n\t\t\t.attr(\"y\", d => this.yScale(this.y(d.id)) + this.bw / 2)\n\t\t\t.attr(\"ry\", 15)\n\t\t\t.transition(\"drawbox\").duration(1000)\n\t\t\t.attr(\"height\", this.bw)\n\t\t\t\t.attr(\"x\", d => this.xScale(d.percentile_5))\n\t\t\t\t.attr(\"y\", d => this.yScale(this.y(d.id)))\n\t\t\t\t.attr('width', d => {\n\t\t\t\t\tconst start = this.xScale(d.percentile_95)\n\t\t\t\t\tconst end = this.xScale(d.percentile_5)\n\t\t\t\t\treturn start - end\n\t\t\t\t})\n\t\t\t\t.on(\"end\", () => {\n\t\t\t\t\tn--\n\t\t\t\t\tif (n === 0){\n\t\t\t\t\t\tthis.drawWhiskers()\n\t\t\t\t\t\tthis.drawMean()\n\t\t\t\t\t\tthis.addLabel()\n\t\t\t\t\t}\n\t\t\t\t})\n\t}\n\n\tdrawWhiskers(){\n\t\tconst offset = this.bw / 2\n\t\tthis.newNode\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", d => this.xScale(d.percentile_5))\n\t\t\t.attr(\"x2\", d => this.xScale(d.percentile_5))\n\t\t\t.attr(\"y1\", d => this.yScale(this.y(d.id)) + offset)\n\t\t\t.attr(\"y2\", d => this.yScale(this.y(d.id)) + offset)\n\t        .attr(\"class\", \"line\")\n\t\t\t.transition(\"drawWhiskers1\").duration(1000)\n\t\t\t\t.attr(\"x2\", d => this.xScale(d.min))\n\n\t\tthis.newNode\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", d => this.xScale(d.percentile_95))\n\t\t\t.attr(\"x2\", d => this.xScale(d.percentile_95))\n\t\t\t.attr(\"y1\", d => this.yScale(this.y(d.id)) + offset)\n\t\t\t.attr(\"y2\", d => this.yScale(this.y(d.id)) + offset)\n\t        .attr(\"class\", \"line\")\n\t\t\t.transition(\"drawWhiskers2\").duration(1000)\n\t\t\t\t.attr(\"x2\", d => this.xScale(d.max))\n\n\t}\n\n\taddLabel(){\n\t\t// text\n\t\tthis.newNode\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"x\", d => {\n\t\t\t\tconst start = this.xScale(d.percentile_5)\n\t\t\t\tconst length = this.xScale(d.percentile_95) - start\n\t\t\t\treturn start + (length / 2)\n\t\t\t})\n\t\t\t.attr(\"y\", d => this.yScale(this.y(d.id)) + this.bw/2)\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"class\", \"label\")\n\t\t\t.style(\"fill\", \"#fff\")\n            .style(\"font-size\", 12)\n            .text(d => `${d.id} (${d.count})`)\n\t}\n\n\tdrawMean(){\n\t\t// mean\n\t\tthis.newNode\n\t\t\t.append(\"line\")\n\t\t\t.attr(\"x1\", d => this.xScale(d.mean))\n\t\t\t.attr(\"x2\", d => this.xScale(d.mean))\n\t\t\t.attr(\"y1\", d => this.yScale(this.y(d.id)))\n\t\t\t.attr(\"y2\", d => this.yScale(this.y(d.id)) + this.bw)\n\t        .attr(\"class\", \"mean\")\n\t}\n\n\tdrawGraph = (nodes, clickHandler, selectedNodes) => {\n\t\tthis.filterNodes(nodes)\n\n\t\tthis.node = this.node.data(this.data, d=> d.id)\n\n\t\tthis.newNode = this.node.enter()\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"candlestick\")\n\n\t\tthis.exitPrevChart()\n\n\t\tthis.newNode.on(\"click\", d => this.click(d))\n\t\tthis.tooltip = select(\"#tooltip\")\n\n\t\tthis.node = this.node.merge(this.newNode)\n\t\tthis.initial = false\n\t}\n\n\tclick = (d) => {\n\t\tif(this.tooltipData !== d){\n\t\t    this.tooltip.transition().duration(200).style(\"opacity\", 1)\n\t\t\tthis.tooltip.html(this.detail(d))\n\t\t         .style(\"left\", (event.pageX) + \"px\")\n\t\t         .style(\"top\", (event.pageY - 28) + \"px\")\n\t\t\tthis.tooltipData = d\n\t\t}else{\n\t\t    this.tooltip.transition().duration(500).style(\"opacity\", 0)\n\t\t\tthis.tooltipData = null\n\t\t}\n\t}\n\n\tfilterNodes = (nodes) => {\n\t\tconst minDates = 10\n\t\tconst minArtists = 20\n\t\tthis.nodes = nodes.filter(e =>{\n\t\t\treturn (\n\t\t\t\tthis.x(e) !== 0 &&\n\t\t\t\te.number_of_unique_artists > minArtists &&\n\t\t\t\te.number_of_dates > minDates\n\t\t\t)\n\t\t})\n\t}\n\n\tcreateLegend(){\n\t\tconst yOffset = this.height + this.margin.top - this.margin.bottom\n\t\tconst translate = `translate(0, ${yOffset})`\n\t\tthis.legend = select(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"class\", \"legend\")\n\t\t\t.attr(\"transform\", translate)\n\t\tconst axis = axisBottom(this.xScale)\n\t\t\t.tickValues(this.xScale.ticks().concat(this.xScale.domain()))\n\t\tthis.legend.call(axis)\n\n\t\tconst labelOffset = `translate(0, ${this.margin.top + 20})`\n\t\tselect(this.svg)\n\t\t\t.append(\"g\")\n\t\t\t.attr(\"transform\", labelOffset)\n\t\t\t.attr(\"class\", \"label legend\")\n\t\t\t.append('text')\n\t\t    .text(\"Average number of bookings per artist by region in 2019\")\n\t}\n\n\tdetail(data){\n\t\tconst rows = data.nodes.map(club => {\n\t\t\treturn `<tr>\n\t\t\t\t<td>${club.id}</td>\n\t\t\t\t<td>\n\t\t\t\t\t${(\n\t\t\t\t\t\tclub.total_number_of_artists / club.number_of_unique_artists\n\t\t\t\t\t).toFixed(1)}\n\t\t\t\t</td>\n\t\t\t</tr>`\n\t\t})\n\t\treturn `<h2 class=\"center\">${data.id}</h2>\n\t\t\t<table>\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t<th>Club Name</th>\n\t\t\t\t\t<th>Average bookings per artist</th>\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t${rows.join(\"\")}\n\t\t\t</tbody>\n\t\t</table>`\n\t}\n}\n\nexport {CandleStickChart}","// taken from: https://observablehq.com/@gka/cheap-fit-text-to-circle\nconst CHAR_W = {\n\tA:7,a:7,B:8,b:7,C:8,c:6,D:9,d:7,E:7,e:7,F:7,f:4,G:9,g:7,H:9,h:7,I:3,i:3,\n\tJ:5,j:3,K:8,k:6,L:7,l:3,M:11,m:11,N:9,n:7,O:9,o:7,P:8,p:7,Q:9,q:7,R:8,\n\tr:4,S:8,s:6,T:7,t:4,U:9,u:7,V:7,v:6,W:11,w:9,X:7,x:6,Y:7,y:6,Z:7,z:5,\n\t'.':2,',':2,':':2,';':2\n}\n\nfunction fitTextToScreen(text, radius){\n\tconst fittedText = text.split(\"\").reduce((acc, e) => {\n\t\tif (acc.length < 1.6 * radius){\n\t\t\tacc.length = acc.length + (CHAR_W[e] || CHAR_W.a)\n\t\t\tacc.text = acc.text + e\n\t\t}\n\t\treturn acc\n\t}, {length: 0, text: ''}).text\n\tif (fittedText === text){\n\t\treturn text\n\t}\n\treturn fittedText + \"...\"\n}\n\nexport {fitTextToScreen}","import {forceSimulation, forceCenter, forceX, forceY} from \"d3-force\"\nimport {forceCollide} from \"d3-force\"\nimport {select, event} from 'd3-selection'\nimport {drag} from 'd3-drag'\nimport {zoom} from \"d3-zoom\"\nimport {timer} from \"d3-timer\"\nimport {fitTextToScreen} from \"../textHandling\"\nimport {fillColor} from \"../lib\"\nimport './Chart.scss'\nimport {Chart} from \"./Chart\"\n\n\nclass ClusterChart extends Chart{\n\n\tconstructor(svg, margin, categories, h, w) {\n\t\tsuper(svg, margin, categories, h, w)\n\t\tthis.clusters = {}\n\t}\n\n\tcreateGraph(nodes){\n\t\tsuper.createGraph(nodes)\n\t\tconst padding = 1\n\n\t\tthis.simulation = forceSimulation()\n\t\t\t.force('center', forceCenter(this.width/2, this.height/2))\n\t\t\t.force('x', forceX(this.width / 2).strength(0.01))\n\t\t\t.force('y', forceY(this.height / 2).strength(0.01))\n\t\t\t.force('cluster', this.cluster().strength(0.5))\n\t\t\t.force('collide', forceCollide(d => d.radius + padding))\n\n\t\tthis.zoomHandler = zoom()\n\t\t\t.scaleExtent([0.8, 5])\n\t\t\t.filter(() => {\n\t\t\t\treturn event.type !== \"wheel\" || event.target.nodeName !== \"svg\"\n\t\t\t})\n\t\t\t.on(\"zoom\", () => this.zoom(this.g))\n\t\tselect(this.svg).call(this.zoomHandler)\n\n\t\tthis.decay()\n\t\tthis.createLegend()\n\t\t// resize all nodes if we were coming from a different graph\n\t\tthis.node.selectAll(\"circle\")\n\t\t\t.transition(this.t)\n\t\t\t.attr(\"r\", d => this.calculateRadius(d))\n\n\t\t// and show labels\n\t\tthis.node.selectAll(\"text\")\n\t\t\t.transition(this.t)\n\t\t\t.style(\"opacity\", \"1\")\n\t\t\t.style(\"display\", \"block\")\n\t\t\t.text(d => fitTextToScreen(d.id, d.radius))\n\t}\n\n\tdecay = () => {\n\t\tconst transitionTime = 3000\n\t\tconst t = timer((elapsed) => {\n\t        var dt = elapsed / transitionTime\n\t\t    this.simulation\n\t\t\t    .force('collide')\n\t\t\t    .strength(Math.pow(dt, 2))\n\t\t    if (dt >= 1.0){\n\t\t        t.stop()\n\t\t\t    // disable forces for less jitter\n\t\t\t    this.simulation.force(\"x\", null)\n\t\t\t    this.simulation.force(\"y\", null)\n\t\t\t    this.simulation.force(\"center\", null)\n                this.simulation.force('cluster', this.cluster().strength(0.1))\n\t\t    }\n\t\t})\n\t}\n\n\tzoom = (zoomGroup) => {\n\t\tif (!this.active) return\n\t\tzoomGroup.attr(\"transform\", event.transform)\n\t}\n\n\tdrawGraph = (nodes, clickHandler, selectedNodes) => {\n\t\t// prevent nodes from jumping on filter operations\n\t\tif (!this.initial){\n\t\t\tthis.simulation.stop()\n\t\t}\n\t\t// todo this mutates and is ugly\n\t\tif (this.initial){\n\t\t\tthis.calculateInitialPositions(nodes)\n\t\t}\n\n\t\tthis.node = this.node.data(nodes, d=> d.id)\n\t\tthis.node.exit()\n\t\t\t.transition().duration(2000)\n\t\t\t.style(\"opacity\", 0)\n\t\t\t.remove()\n\n\t\tlet newNode = this.node.enter()\n\t\t\t.append(\"g\")\n\t\t\t.on(\"click\", d => clickHandler(d))\n\t\t\t.call(drag()\n\t\t\t\t\t.on(\"start\", d => this.dragstarted(d, this.simulation))\n\t\t\t\t\t.on(\"drag\", d => this.dragged(d))\n\t\t\t\t\t.on(\"end\", d => this.dragended(d, this.simulation))\n\t\t\t)\n\n\n\t\tnewNode\n\t\t\t.append(\"circle\")\n\t\t\t.attr(\"r\", d => this.calculateRadius(d))\n\t\t\t.attr(\"fill\", d => fillColor(d.group, this.categories))\n\t\t\t.attr(\"class\", \"nodes\")\n\t\t\t.style(\"fill-opacity\", this.initial? 1: 0)\n\t\t\t.transition().duration(2000).style(\"fill-opacity\", 1)\n\n\t\tnewNode\n\t\t\t.append(\"text\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"class\", \"label\")\n\t\t\t.style(\"fill\", \"#fff\")\n\t\t\t.style(\"opacity\", 0)\n            .style(\"font-size\", 12)\n\t\t\t.text(d => fitTextToScreen(d.id, d.radius))\n\t\t\t.transition().duration(2000).style(\"opacity\", 1)\n\n\t\tthis.node = this.node.merge(newNode)\n\n\t\tif (!this.initial){\n\t\t\t// restart simulation so nodes wont get stuck on next filter\n\t\t\tthis.simulation.alphaTarget(0.3).restart()\n\t\t\tsetTimeout( () => {\n\t\t\t\tthis.simulation.alphaTarget(0)\n\t\t\t}, 100)\n\t\t\tthis.decay()\n\t\t}\n\t\tthis.highlightSelected(selectedNodes)\n\n\t\tthis.simulation\n\t\t\t.on('tick', this.tick)\n\t\t\t.nodes(nodes)\n\t\tthis.initial = false\n\t}\n\n\tcalculateInitialPositions = (nodes) => {\n\t\tconst radius = Math.min(this.width, this.height) / 2\n\t\tconst groupCount = Math.max(...nodes.map(e => e.group))\n\t\tthis.clusters = new Array(groupCount)\n\t\tnodes.forEach((e) => {\n\t\t\t// position along a circle, clustered by group\n\t\t\tconst g = e.group\n\t\t\tconst angle = g / groupCount * 2 * Math.PI\n\t        e.x  = Math.cos(angle) * radius + this.width / 2 + Math.random()\n            e.y = Math.sin(angle) * radius + this.height / 2 + Math.random()\n\n\t\t\t// set the radius of each node\n\t\t\tconst r = this.calculateRadius(e)\n\t\t\te.radius = r\n\n\t\t\tif (!this.clusters[g] || r > this.clusters[g]){\n\t\t\t\tthis.clusters[e.group] = e\n\t\t\t}\n\t\t})\n\t}\n\n\ttick = () => {\n\t\tthis.node\n\t\t\t.attr(\"transform\", d => \"translate(\"+d.x + \",\" + d.y+\")\")\n\t}\n\n\tcluster = () => {\n\t\t// adapted from\n\t\t// https://bl.ocks.org/ericsoco/38b4f8b51ecf116e6fb0727d25687e8e\n\t\tlet nodes,\n\t\t\tstrength = 0.1\n\n\t\tconst force = (alpha) => {\n\t\t\t// scale + curve alpha value\n\t\t\talpha *= strength * alpha\n\n\t\t\tnodes.forEach((d) => {\n\t\t\t\tlet cluster = this.clusters[d.group]\n\t\t\t\tif (cluster === d) return\n\t\t\t\tlet x = d.x - cluster.x,\n\t\t\t\t\ty = d.y - cluster.y,\n\t\t\t\t\tl = Math.sqrt(x * x + y * y),\n\t\t\t\t\tr = d.radius + cluster.radius\n\n\t\t\t\tif (l !== r) {\n\t\t\t\t\tl = (l - r) / l * alpha\n\t\t\t\t\td.x -= x *= l\n\t\t\t\t\td.y -= y *= l\n\t\t\t\t\tcluster.x += x\n\t\t\t\t\tcluster.y += y\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\n\t\tforce.initialize = function (_) {\n\t\t\tnodes = _\n\t\t}\n\n\t\tforce.strength = _ => {\n\t\t\tstrength = _ == null ? strength : _\n\t\t\treturn force\n\t\t}\n\n\t\treturn force\n\t}\n\n\tdragstarted = (d, simulation) => {\n\t\tif (!this.active) return\n\t\tif (!event.active) simulation.alphaTarget(0.3).restart()\n\t\td.fx = d.x\n\t\td.fy = d.y\n\t}\n\n\tdragged = d => {\n\t\tif (!this.active) return\n\t\td.fx = event.x\n\t\td.fy = event.y\n\t}\n\n\tdragended = (d, simulation) => {\n\t\tif (!this.active) return\n\t\tif (!event.active) simulation.alphaTarget(0)\n\t\td.fx = null\n\t\td.fy = null\n\t}\n\n\tcreateLegend(){\n\t\tconst sizes = [10000, 1000, 100, 10]\n\t\tconst radiuses = sizes.map(e => {\n\t\t\treturn this.calculateRadius({followers: e})\n\t\t})\n\n\t\tconst x = 10\n\t\tconst lineHeight = 30\n\t\tconst y = this.height - 2 * Math.max(...radiuses)\n\n\t    this.legend = select(this.svg)\n\t        .append(\"g\")\n\t\t\t.attr(\"class\", \"legend\")\n\t        .attr(\"x\", x)\n\t        .attr(\"y\", y)\n\t        .attr(\"transform\", `translate(${x}, ${y})`)\n\t        .style(\"text-align\", \"center\")\n\n\t\tconst max = Math.max(...radiuses)\n\t\t// add nodes\n\t\tthis.legend.selectAll(\"rects\")\n\t\t.data(radiuses)\n\t\t.enter()\n\t\t.append(\"circle\")\n\t\t    .attr(\"cx\", max)\n\t\t    .attr(\"cy\", d => 2 * max - (d) + 0.5*lineHeight)\n\t\t    .attr(\"r\", d => d)\n\t\t\t.attr(\"fill\", \"white\")\n\t\t\t.attr(\"stroke\", \"black\")\n\t\t\t.attr(\"alignment-baseline\", \"middle\")\n\n\t\tthis.legend.selectAll(\"rects\")\n\t\t.data(radiuses)\n\t\t.enter()\n\t\t.append(\"text\")\n\t\t    .attr(\"x\", max)\n\t\t    .attr(\"y\", (d, i) => {\n\t\t        // this is messy, but the best looking option I could find\n\t\t\t    // smallest circle is labelled in center, others at the top\n\t\t        if (i === 0){\n\t\t            return 2 * max - 1.4 * d\n\t\t\t    }\n\t\t        if (i === 1){\n\t\t            return 2 * max - 1.2 * d\n\t\t\t    }\n\t\t        return 2 * max - (d) + 0.5*lineHeight\n\t\t    })\n\t\t\t.text((d, i) => sizes[i])\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\n\t\tthis.legend\n\t\t\t.append('text')\n\t\t\t.text(\"RA Club Followers\")\n\t\t\t.attr(\"text-anchor\", \"middle\")\n\t\t\t.attr(\"x\", max)\n\t\t\t.attr(\"y\", 2 * max + lineHeight)\n\t}\n\n\texit(){\n\t\tsuper.exit()\n\t\tthis.simulation.stop()\n\t}\n\n\tcalculateRadius(e){\n\t\t// scale node radius according to svg size\n\t\tconst m = Math.min(this.width, this.height) / 800\n\t\treturn 12 * Math.log(Math.sqrt(e.followers)) * m\n\t}\n\n}\n\n\n\nexport {ClusterChart}","// wrapper around chart classes that allows us to switch between them\n// for transition purposes\n\nclass ChartWrapper{\n\n\tconstructor(svg, margin, categories, h, w, ChartType) {\n\t\tthis.svg = svg\n\t\tthis.initial = true\n\t\tthis.margin = margin\n\t\tthis.categories = categories\n\t\tthis.h = h\n\t\tthis.w = w\n\t\tthis.chart = new ChartType(svg, margin, categories, h, w)\n\t}\n\n    setChartType(nodes, ChartType){\n\t    this.chart.exit()\n        const newChart = new ChartType(\n            this.svg, this.margin, this.categories, this.h, this.w\n        )\n        newChart.g = this.chart.g\n        newChart.node = this.chart.node\n\t    newChart.initial = true\n        newChart.createGraph(nodes)\n        this.chart = newChart\n    }\n\n}\n\nexport {ChartWrapper}","import React, {Component} from 'react'\nimport './container.scss'\nimport BarChart from './BarChart'\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons'\nimport ScrollyTelling from \"./ScrollyTelling\"\nimport {fillColor, artistLink} from \"./lib\"\nimport {BeeSwarmChart} from \"./charts/BeeSwarmChart\"\nimport {CandleStickChart} from \"./charts/CandleStickChart\"\nimport {ClusterChart} from \"./charts/ClusterChart\"\nimport {ChartWrapper} from \"./charts/ChartWrapper\"\n\n\nclass Container extends Component {\n\tcontrolHeight = 70\n\tmargin = {top: 10, right: 20, bottom: 20, left: 50}\n\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.ref = React.createRef()\n\t\t// these are the currently selected values\n\t\t// if you need all values, you should use this.props.data\n\t\tthis.nodes = this.props.data.nodes\n\n\t\tthis.state = {\n\t\t\tselectedNodes: [],\n\t\t\tdata: {},\n\t\t\tfilters: {},\n\t\t\tdraw: true,\n\t\t\tchartType: \"Cluster\",\n\t\t\twidth: document.documentElement.clientWidth,\n\t\t\tsvgWidth: document.documentElement.clientWidth,\n\t\t\tsvgHeight: document.documentElement.clientHeight - this.controlHeight\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\twindow.removeEventListener('resize', this.updateWindowDimensions)\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.updateWindowDimensions()\n\t\twindow.addEventListener('resize', this.updateWindowDimensions)\n\t\t// sort so adjacent groups get different colors\n\t\tthis.categories = [\n\t\t\t...new Set(this.nodes.map(e => e.group).sort((a, b) => {\n\t\t\t\treturn a % 2 - b % 2 || a - b\n\t\t\t}))\n\t\t]\n\n\t\tconst svg = this.ref.current\n\t\tthis.chartWrapper = new ChartWrapper(\n\t\t\tsvg, this.margin, this.categories,\n\t\t\tthis.state.svgHeight, this.state.svgWidth,\n\t\t\tClusterChart\n\t\t)\n\t}\n\n\tonNodeClick = (node) => {\n\t\t// we allow max two selected nodes at a time\n\t\tlet selectedNodes = (this.state.selectedNodes || [])\n\t\tconst index = selectedNodes.indexOf(node)\n\t\tif (index !== -1){\n\t\t\tselectedNodes.splice(index, 1)\n\t\t}else{\n\t\t\tselectedNodes.push(node)\n\t\t}\n\t\tselectedNodes = selectedNodes.slice(-2)\n\t\tthis.setState({selectedNodes: selectedNodes})\n\t}\n\n\tcreateTable(header, data){\n\t\treturn <tr key={header+\"row\"}>\n\t\t\t<td key={header+\"cell\"}>{header}</td>\n\t\t\t{data.map((e, i) => {\n\t\t\t\treturn <td key={header+\"-\"+i}>{e}</td>\n\t\t\t})}\n\t\t</tr>\n\t}\n\n\tmostCommonArtists(){\n\t\treturn this.state.selectedNodes.map((node, i) => {\n\t\t\treturn Object.entries(node.artists)\n\t\t\t\t.sort((a, b) => b[1] - a[1])\n\t\t\t\t.slice(0, 5)\n\t\t\t\t.map((e, j) => {\n\t\t\t\t\tconst key = \"artist\"+i+\"-\"+j\n\t\t\t\t\treturn <li key={key}>\n\t\t\t\t\t\t{this.artistLink(e[0])}{\" - \" + e[1]}\n\t\t\t\t\t</li>\n\t\t\t\t})\n\t\t})\n\t}\n\n\tmostSimilarClubs(){\n\t\treturn this.state.selectedNodes.map(f => {\n\t\t\treturn this.props.data.links.filter((e) => {\n\t\t\t\treturn [e.source, e.target].includes(f.id)\n\t\t\t})\n\t\t\t.sort((a, b) => b.weight - a.weight)\n\t\t\t.slice(0, 5)\n\t\t\t.reduce((acc, e) => {\n\t\t\t\tconst club = e.source !== f.id? e.source : e.target\n\t\t\t\tacc.push(this.clubButton(f, club, e.weight))\n\t\t\t\treturn acc\n\t\t\t}, [])\n\t\t})\n\t}\n\n\tclubButton(parentClub, clubId, percentage=null){\n\t\treturn <li key={clubId}>\n\t\t\t<button\n\t\t\t\tclassName={\"clubButton\"}\n\t\t\t\tonClick={(e) => this.clubButtonClickHandler(clubId, parentClub)}\n\t\t\t>\n\t\t\t\t{clubId}\n\t\t\t</button> {percentage? \" - \" + (percentage*100).toFixed() + \"%\": \"\" }\n\t\t</li>\n\t}\n\n\tclubButtonClickHandler(clubId, parentClub){\n\t\tconst club = this.nodes.find(e => e.id === clubId)\n\t\t// we want to maintain the position of the parent club in selected club\n\t\tconst selectedClubs = this.state.selectedNodes[0] === parentClub?\n\t\t\t[parentClub, club] : [club, parentClub]\n\t\tthis.setState({selectedNodes: selectedClubs})\n\t}\n\n\tartistLink(artistName){\n\t\treturn artistLink(artistName, this.props.data.artist_names_to_ids)\n\t}\n\n\tshowSimilarities(){\n\t\tif (this.state.selectedNodes.length !== 2){\n\t\t\treturn ''\n\t\t}\n\n\t\tconst artists = this.state.selectedNodes.reduce((acc, e) => {\n\t\t\tacc.push(Object.keys(e.artists))\n\t\t\treturn acc\n\t\t}, [])\n\t\tconst union = artists[0].filter(e => artists[1].includes(e))\n\n\t\tif (union.length === 0){\n\t\t\treturn <div className={'similarities'}>\n\t\t\t\t<h4>No overlap in lineups - no common artists</h4>\n\t\t\t</div>\n\t\t}\n\n\t\tconst ids = this.state.selectedNodes.map(e => e.id)\n\t\tconst overlap = (this.props.data.links.find(e => {\n\t\t\treturn ids.includes(e.source) && ids.includes(e.target)\n\t\t}).weight * 100 ).toFixed(2)\n\n\t\treturn <div className={'similarities'}>\n\t\t\t<h4>\n\t\t\t\t{overlap}% overlap in lineups - {union.length} common artists:\n\t\t\t</h4>\n\t\t\t<ul>\n\t\t\t\t{union.map((e) => <li key={e}>{this.artistLink(e)}</li>)}\n\t\t\t</ul>\n\t\t</div>\n\t}\n\n\tcomponentDidUpdate( prevProps, prevState){\n\t\tconst filters = this.state.filters\n\t\tif (Object.keys(filters).length !== 0){\n\t\t\tthis.nodes = this.props.data.nodes.filter((e) => {\n\t\t\t\treturn Object.keys(filters).every((f) => {\n\t\t\t\t\treturn filters[f] === \"all\" || e[f] === filters[f]\n\t\t\t\t})\n\t\t\t})\n\t\t}else{\n\t\t\tthis.nodes = this.props.data.nodes\n\t\t}\n\t\tif (this.state.chartType){\n\t\t\tlet chartType\n\t\t\tif (this.state.chartType === \"Cluster\"){\n\t\t\t\tchartType = ClusterChart\n\t\t\t}\n\t\t\tif (this.state.chartType === \"CandleStick\"){\n\t\t\t\tchartType = CandleStickChart\n\t\t\t}\n\t\t\tif (this.state.chartType === \"BeeSwarm\"){\n\t\t\t\tchartType = BeeSwarmChart\n\t\t\t}\n\n\t\t\tif (chartType.name !== this.chartWrapper.chart.constructor.name){\n\t\t\t    this.chartWrapper.setChartType(this.nodes, chartType)\n\t\t\t}\n\t\t}\n\n\t\tif (this.state.draw){\n\t\t\tif (this.chartWrapper.chart.initial){\n\t\t\t\tthis.chartWrapper.chart.createGraph(this.nodes)\n\t\t\t}\n\t\t\tthis.chartWrapper.chart.drawGraph(\n\t\t\t\tthis.nodes,\n\t\t\t\tthis.onNodeClick,\n\t\t\t\tthis.state.selectedNodes\n\t\t\t)\n\t\t}\n\t}\n\n\tshowClubs(){\n\t\tconst clubs = this.state.selectedNodes\n\t\treturn <div className={\"clubInfo\"+clubs.length}>\n\t\t\t{clubs.map((e) => this.showClub(e))}\n\t\t\t{this.createClubTable()}\n\t\t</div>\n\t}\n\n\tshowClub(node){\n\t\tconst imgPath =`${process.env.PUBLIC_URL}/img/`\n\t\tconst img = node.logo === '' ? <div className={'placeholder'}/> : <div className={\"image center\"}>\n\t\t\t<img src={imgPath+node.logo.split(\"/\").slice(-1)[0]} alt={node.id} />\n\t\t</div>\n\t\tconst color = fillColor(node.group, this.categories)\n\t\tconst link = 'https://www.residentadvisor.net/club.aspx?id=' + node.club_id\n\n\t\treturn <div key={node.club_id} className={\"clubPanel\"}>\n\t\t\t<button\n\t\t\t\tclassName={\"clubButton\"}\n\t\t\t\tid={\"close\"}\n\t\t\t\tonClick={(e) => this.onNodeClick(node)}\n\t\t\t>\n\t\t\t\t <FontAwesomeIcon icon={faTimesCircle} />\n\t\t\t</button>\n\t\t\t<h3 style={{backgroundColor: color}} className={\"clubName\"}>\n\t\t\t\t<a rel={'noopener noreferrer'} target={'_blank'} href={link}>\n\t\t\t\t\t{node.id}\n\t\t\t\t</a>\n\t\t\t</h3>\n\t\t\t{img}\n\t\t\t<div className={\"center\"}>\n\t\t\t\t{node.region}\n\t\t\t\t{node.region === node.country ? \"\" : \" - \" + node.country}\n\t\t\t</div>\n\t\t</div>\n\t}\n\n\tcreateClubTable(){\n\t\tif (this.state.selectedNodes.length === 0){\n\t\t\treturn \"\"\n\t\t}\n\t\tconst rows = this.state.selectedNodes.map(club => {\n\t\t\treturn [\n\t\t\t\tclub.number_of_dates,\n\t\t\t\tclub.number_of_unique_artists,\n\t\t\t\tclub.total_number_of_artists,\n\t\t\t\tclub.followers,\n\t\t\t\t(club.attending / club.number_of_dates).toFixed(1),\n\t\t\t\t(club.total_number_of_artists / club.number_of_unique_artists).toFixed(1),\n\t\t\t\t(club.total_number_of_artists / club.number_of_dates).toFixed(2),\n\t\t\t]\n\t\t})\n\n\t\tconst headers = [\n\t\t\t\"Number of events\",\n            \"Unique artists\",\n            \"Total artists booked\",\n            \"Followers\",\n\t\t\t\"Average event attendance\",\n\t\t\t\"Average bookings per artist\",\n\t\t\t\"Average artists per date\",\n\t\t]\n\n\t\tlet tableRows = headers.map((e, i) => {\n\t\t\treturn <tr key={i}>\n\t\t\t\t<td key={e} >{e}</td>\n\t\t\t\t{rows.map((e, j) => <td key={i+\"-\"+j}>{e[i]}</td>)}\n\t\t\t</tr>\n\t\t}).concat(\n\t\t\tthis.createTable(\"Most Booked Artists\", this.mostCommonArtists())\n\t\t).concat(\n\t\t\tthis.createTable(\"Most Similar Clubs\", this.mostSimilarClubs())\n\t\t)\n\n\t\tconst header = rows.length !== 2? null : <thead>\n\t\t\t<tr>\n\t\t\t\t<th key={\"empty\"} />\n\t\t\t\t{this.state.selectedNodes.map(e=><th key={e.id}>{e.id}</th>)}\n\t\t\t</tr>\n\t\t</thead>\n\t\treturn <table>\n\t\t\t{header}\n\t\t\t<tbody>{tableRows}</tbody>\n\t\t</table>\n\t}\n\n\tshowGroup(){\n\t\tif (this.state.selectedNodes.length !== 1 ){\n\t\t\treturn \"\"\n\t\t}\n\t\tconst club = this.state.selectedNodes[0]\n\t\tconst groupClubs = this.props.data.nodes.filter(e => {\n\t\t\treturn club.group === e.group\n\t\t})\n\t\tif (groupClubs.length === 1){\n\t\t\treturn \"\"\n\t\t}\n\n\t\tconst stats = groupClubs.reduce((acc, e) => {\n\t\t\tacc[e.region] = (acc[e.region] + 1 || 1)\n\t\t\treturn acc\n\t\t}, {})\n\n\t\tconst color = fillColor(club.group, this.categories)\n\t\treturn <div style={{width: '50%'}}>\n\t\t\t<h3 >\n\t\t\t\tOther clubs in this cluster\n\t\t\t</h3>\n\t\t\t<BarChart\n\t\t\t\tdata={Object.entries(stats)}\n\t\t\t\twidth={312}\n\t\t\t\theight={210}\n\t\t\t\tcolor={color}\n\t\t\t/>\n\t\t\t<ul>\n\t\t\t\t{groupClubs.map(e => this.clubButton(club, e.id))}\n\t\t\t</ul>\n\t\t</div>\n\t}\n\n\tsetFilters =(e) => {\n\t\tconst filter = {}\n\t\tconst v = e.target.name === \"rank\" && e.target.value !== \"all\"?\n\t\t\tparseInt(e.target.value) : e.target.value\n\t\tfilter[e.target.name] = v\n\t\tthis.setState({\"filters\": filter, \"selectedNodes\": []})\n\t}\n\n\tupdateWindowDimensions = () => {\n\t\tconst w = document.documentElement.clientWidth\n\t\tconst h = document.documentElement.clientHeight\n\t\tthis.setState({\n\t\t\twidth: w, height: h, svgWidth: w, svgHeight: h - this.controlHeight\n\t\t})\n\t}\n\n\tshowClubInfo(){\n\t\tif (this.state.selectedNodes.length === 0){\n\t\t\treturn <div className={\"clubDetail hidden\"} />\n\t\t}\n\t\treturn <div className={\"clubDetail visible\"}>\n\t\t\t{this.showClubs()}\n\t\t\t{this.showGroup()}\n\t\t\t{this.showSimilarities()}\n\t\t</div>\n\t}\n\n    onStepEnter = ({element, data, direction}) => {\n\t\tconsole.log(data);\n\t    if (data){\n\t\t\tthis.setState(data)\n\t    }\n\t}\n\n\trender() {\n\t\treturn <div className=\"container\" id={\"start\"}>\n\t\t\t<div id={\"tooltip\"} />\n\t\t\t<ScrollyTelling\n\t\t\t\tenter={this.onStepEnter}\n\t\t\t\tnodes={this.props.data.nodes}\n\t\t\t\tlinks={this.props.data.links}\n\t\t\t/>\n\t\t\t<div className={\"graphic\"}>\n\t\t\t\t<svg\n\t\t\t\t\tref={this.ref}\n\t\t\t\t\twidth={this.state.svgWidth}\n\t\t\t\t\theight={this.state.svgHeight}\n\t\t\t\t/>\n\t\t\t\t{this.showClubInfo()}\n\t\t\t</div>\n        </div>\n\t}\n}\n\nexport default Container","import {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport {faSyncAlt, faMobileAlt} from \"@fortawesome/free-solid-svg-icons\"\nimport React from \"react\"\nimport './rotate.scss';\n\n\nfunction Rotate(){\n\treturn <div className=\"rotate\">\n\t\t<div className={\"center\"}>\n\t\t\t<h2>\n\t\t\t\tPlease turn your phone to landscape mode to properly view\n\t\t\t\tthis webpage.\n\t\t\t</h2>\n\t\t\t<FontAwesomeIcon icon={faMobileAlt}/>\n\t\t\t<FontAwesomeIcon icon={faSyncAlt} spin={true}/>\n\t\t\t<h2>\n\t\t\t\tThanks!\n\t\t\t</h2>\n\t\t</div>\n\t</div>\n}\n\nexport default Rotate","import React, {Component} from 'react'\nimport './sections.scss';\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\"\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons'\nimport Rotate from \"./Rotate\"\n\nclass Intro extends Component {\n\trender(){\n\t\tconst content = <>\n\t\t\t<h1 className=\"center\">\n\t\t\t\tClubster Analysis\n\t\t\t</h1>\n\t\t\t<h3>\n\t\t\t\t Comparing the bookings at the worlds most popular nightclubs\n\t\t\t</h3>\n\t\t\t<p>\n\t\t\t\tHow similar or different are the line ups of the most popular nightclubs in the world?\n\t\t\t\tWhich clubs rely on residents and which have djs rotate through?\n\t\t\t\tHow different are the super clubs from the more underground fare?\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tIn an attempt to answer these questions and others like them we looked\n\t\t\t\tat the most recommended clubs for the most popular regions on the\n\t\t\t\treputable website <a href=\"https://www.residentadvisor.net/events\">Resident Advisor (RA)</a>.\n\t\t\t\tWe gathered all their listings for 2019 and then compared\n\t\t\t\tthe clubs based on djs and artists that played there that year.\n\t\t\t\tTake a look to see how your favourite club fits in.\n\t\t\t</p>\n\t\t\t<h3>\n\t\t\t\tScroll down to get started!\n\t\t\t</h3>\n\t\t\t<div className={'scrollDown center'}>\n\t\t\t\t<a href=\"#start\">\n\t\t\t\t\t<FontAwesomeIcon icon={faChevronDown} />\n\t\t\t\t</a>\n\t\t\t</div>\n\t\t</>\n\t\treturn <Section content={content} intro={true}/>\n\t}\n}\n\nclass Outro extends Component {\n\trender (){\n\t\tconst content = <>\n\t\t\t<p>\n\t\t\t\tThat concludes this analysis of the bookings and line ups for\n\t\t\t\tthe most recommended clubs in the most popular regions on Resident\n\t\t\t\tAdvisor. I hope it has provided insight into how these clubs are\n\t\t\t\talike and different and given you a glimpse of how the world of\n\t\t\t\telectronic dance music worked in 2019.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThe data was retrieved in April to May 2020.\n\t\t\t\tIf you'd like to learn more you can view all the <a href=\"https://github.com/Kalli/clubster-analysis\">code</a> for\n\t\t\t\tretrieving and visualising this data. If you have any questions\n\t\t\t\tyou can reach me on <a href=\"https://twitter.com/karltryggvason\">twitter</a> or\n\t\t\t\tthrough <a href=\"mailto:ktryggvason@gmail.com\">email</a>.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tA <a href=\"https://lazilyevaluated.co/\">Lazily Evaluated</a> production.\n\t\t\t\tBy <a href=\"https://karltryggvason.com/\">Karl Tryggvason</a> and <a href=\"https://soundcloud.com/moffandtarkin\">Magnús Felix Tryggvason</a>\n\t\t\t</p>\n\t\t</>\n\t\treturn <Section content={content} intro={false} />\n\t}\n}\n\nclass Section extends Component {\n\trender(){\n\t\tconst contentClass = \"sectionsContent \" + (\n\t\t\t!this.props.intro? \"bottom\" : \"\"\n\t\t)\n\t\treturn <div className={\"sections\"}>\n\t\t\t<div className={ this.props.intro? \"top\" : \"\"} />\n\t\t\t<Rotate />\n\t\t\t<div className={contentClass}>\n\t\t\t\t<div className=\"jumbotron\">\n\t\t\t\t\t{this.props.content}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t}\n}\n\nexport {Intro, Outro}","import React, {Component} from 'react'\nimport './navbar.scss'\n\n\nclass Navbar extends Component {\n\trender() {\n\t\treturn <nav className=\"navbar\" id={'nav'}>\n\t\t\t<h1 className=\"center\">\n\t\t\t\t<a href=\"http://lazilyevaluated.co/\">\n\t\t\t\tLazily Evaluated\n\t\t\t\t</a>\n\t\t\t</h1>\n\t\t</nav>\n\t}\n}\n\nexport default Navbar","import React, {Component} from 'react';\nimport Container from './Container'\nimport {Intro, Outro} from './Sections'\nimport Navbar from './navbar'\n\nclass App extends Component {\n\n\tconstructor(props) {\n        super(props)\n        this.state = {\n            loading: true,\n\t        data: {}\n        }\n    }\n\n    loadData() {\n        fetch(`${process.env.PUBLIC_URL}/network-2019.json`)\n            .then( (response) => {\n                return response.json()\n            })\n            .then( (data) => {\n            \t// change arrays into objects\n\t            data.nodes = data.nodes.map(e =>{\n\t            \treturn e.reduce((acc, e, i) => {\n\t            \t\tacc[data.node_keys[i]] = e\n\t            \t\treturn acc\n\t\t            }, {})\n\t            })\n\t            data.links = data.links.map(e =>{\n\t            \treturn e.reduce((acc, e, i) => {\n\t            \t\tacc[data.link_keys[i]] = e\n\t            \t\treturn acc\n\t\t            }, {})\n\t            })\n            \tthis.setState({\n\t\t            loading: false,\n\t\t            data: data,\n            \t})\n            });\n    }\n\n\tcomponentDidMount() {\n        this.setState({\n\t        loading: true,\n            data: this.loadData()\n        })\n    }\n\n    render(){\n\t    const container = this.state.loading? '' : <Container\n\t\t    data={this.state.data}\n\t    />\n        return (\n            <>\n\t            <Navbar />\n\t            {<Intro />}\n                {container}\n\t            {<Outro />}\n            </>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}